{"version":3,"file":"index.js","sources":["../node_modules/eventemitter3/index.js","../src/Graph.ts"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { EventEmitter } from \"eventemitter3\";\n\nexport type IPrimitive = string | number | boolean | null;\nexport type ISetValue =\n  | Ref\n  | IPrimitive\n  | { [key: string | symbol | number]: ISetValue };\nexport type IGetValue =\n  | IPrimitive\n  | Ref\n  | { [key: string | symbol | number]: IGetValue };\n\nexport const SEPERATOR = \"/\";\n\nexport interface IEntryJSON {\n  state: number;\n}\n\nexport class Entry {\n  graph: Graph;\n  parent: Entry | null;\n  key: string;\n  state: number;\n\n  constructor(graph: Graph, parent: Entry | null, key: string, state: number) {\n    this.graph = graph;\n    this.parent = parent;\n    this.key = key;\n    this.state = state;\n  }\n\n  getPath(): string {\n    return this.parent\n      ? this.parent.getPath() + SEPERATOR + this.key\n      : this.key;\n  }\n\n  toJSON(): IEntryJSON {\n    return {\n      state: this.state,\n    };\n  }\n}\n\nexport interface INodeJSON extends IEntryJSON {\n  children: {\n    [key: string | symbol | number]: IEdgeJSON | IRefJSON | INodeJSON;\n  };\n}\n\nexport class Node extends Entry {\n  children: Map<string, Edge | Node> = new Map();\n\n  toNodesJSON() {\n    return nodeMapToJSON(this.children, {}, this.getPath(), false);\n  }\n\n  toJSON(): INodeJSON {\n    const children: INodeJSON[\"children\"] = {};\n    for (const [key, child] of this.children) {\n      if (child instanceof Node) {\n        children[key] = { state: child.state, id: child.getPath() };\n      } else {\n        children[key] = child.toJSON();\n      }\n    }\n    return {\n      state: this.state,\n      children,\n    };\n  }\n}\n\nexport interface IEdgeJSON extends IEntryJSON {\n  value: IPrimitive;\n}\n\nexport class Edge extends Entry {\n  value: IPrimitive | Ref;\n\n  constructor(\n    graph: Graph,\n    parent: Entry | null,\n    key: string,\n    state: number,\n    value: IPrimitive\n  ) {\n    super(graph, parent, key, state);\n    this.state = state;\n    this.value = value;\n  }\n\n  toJSON(): IEdgeJSON | IRefJSON {\n    return this.value instanceof Ref\n      ? this.value.toJSON()\n      : { state: this.state, value: this.value };\n  }\n}\n\nexport interface IRefJSON extends IEntryJSON {\n  id: string;\n}\n\nexport class Ref implements PromiseLike<IGetValue | undefined> {\n  protected graph: Graph;\n  protected path: string;\n  protected state: number;\n\n  constructor(graph: Graph, path: string, state: number) {\n    this.graph = graph;\n    this.path = path;\n    this.state = state;\n  }\n\n  get(key: string) {\n    return new Ref(this.graph, this.path + SEPERATOR + key, this.state);\n  }\n  set(value: ISetValue) {\n    return this.graph.set(this.path, value);\n  }\n  getValue() {\n    return this.graph.getValueAtPath(this.path);\n  }\n  getPath() {\n    return this.path;\n  }\n  getNode() {\n    return this.graph.getNodeAtPath(this.path);\n  }\n  getState() {\n    return this.state;\n  }\n\n  on(callback: (value: IGetValue | undefined) => void) {\n    const onChange = (path: string) => {\n      if (path.startsWith(this.path)) {\n        callback(this.getValue());\n      }\n    };\n    this.graph.on(\"change\", onChange);\n    const value = this.getValue();\n    if (value !== undefined) {\n      callback(value);\n    }\n    return () => {\n      this.graph.off(\"change\", onChange);\n    };\n  }\n\n  then<T = IGetValue | undefined, E = never>(\n    onfulfilled?:\n      | ((value: IGetValue | undefined) => T | PromiseLike<T>)\n      | undefined\n      | null,\n    onrejected?: ((reason: any) => E | PromiseLike<E>) | undefined | null\n  ): PromiseLike<T | E> {\n    const value = this.getValue();\n    let promise: PromiseLike<IGetValue | undefined>;\n\n    if (value !== undefined) {\n      promise = Promise.resolve(value);\n    } else {\n      promise = new Promise((resolve) => {\n        const onChange = (path: string) => {\n          if (path.startsWith(this.path)) {\n            resolve(this.getValue());\n          }\n        };\n        this.graph.once(\"change\", onChange);\n      });\n    }\n    return promise.then(onfulfilled, onrejected);\n  }\n\n  toJSON(): IRefJSON {\n    return {\n      id: this.path,\n      state: this.state,\n    };\n  }\n}\n\nexport interface IGraphEvents {\n  get(this: Graph, path: string): void;\n  set(this: Graph, path: string, value: IRefJSON | IEdgeJSON): void;\n  change(\n    this: Graph,\n    path: string,\n    value: IRefJSON | IEdgeJSON | INodeJSON\n  ): void;\n}\n\nexport class Graph extends EventEmitter<IGraphEvents> {\n  protected listening: Set<string> = new Set();\n  protected state = Date.now();\n  protected entries: Map<string, Node | Edge> = new Map();\n\n  getEntries(): ReadonlyMap<string, Node | Edge> {\n    return this.entries;\n  }\n\n  get(path: string): Ref {\n    return new Ref(this, path, this.state);\n  }\n\n  getValueAtPath(path: string) {\n    const keys = path.split(SEPERATOR),\n      node = this.entries.get(keys.shift() as string);\n\n    if (node) {\n      return getValueAtPath(keys, node, new Map());\n    } else {\n      this.listenTo(path);\n      return undefined;\n    }\n  }\n\n  getNodeAtPath(path: string) {\n    const keys = path.split(SEPERATOR),\n      node = this.entries.get(keys.shift() as string);\n\n    return getNodeAtPath(keys, node);\n  }\n\n  set(path: string, value: ISetValue) {\n    this.state = Date.now();\n    this.setPathInternal(path, value, this.state);\n    return this;\n  }\n\n  merge(path: string, json: IRefJSON | IEdgeJSON | INodeJSON) {\n    if (this.isListeningTo(path)) {\n      this.mergePathInternal(path, json);\n    }\n    return this;\n  }\n\n  listenTo(path: string) {\n    this.listening.add(path);\n    this.emit(\"get\", path);\n    return this;\n  }\n\n  isListeningTo(path: string) {\n    for (const listeningPath of this.listening) {\n      if (path.startsWith(listeningPath)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  toJSON() {\n    return nodeMapToJSON(this.entries, {}, undefined, true);\n  }\n\n  private mergePathInternal(\n    path: string,\n    json: IRefJSON | IEdgeJSON | INodeJSON\n  ) {\n    const jsonState = json.state;\n    let node = this.getNodeAtPath(path);\n\n    if (\"children\" in json) {\n      if (node instanceof Edge) {\n        if (\n          (node.value instanceof Ref &&\n            node.value.getPath() === path &&\n            node.value.getState() >= jsonState) ||\n          shouldOverwrite(\n            node.value,\n            node.state,\n            new Ref(this, path, jsonState),\n            jsonState\n          )\n        ) {\n          node = this.createNodeAt(path, jsonState);\n        }\n      } else if (!node) {\n        node = this.createNodeAt(path, jsonState);\n      }\n\n      if (node instanceof Node) {\n        for (const [key, child] of Object.entries(json.children)) {\n          this.mergePathInternal(node.getPath() + SEPERATOR + key, child);\n        }\n        this.emit(\"change\", node.getPath(), node.toJSON());\n      }\n    } else {\n      const jsonValue =\n        \"value\" in json ? json.value : new Ref(this, json.id, jsonState);\n\n      if (node instanceof Edge) {\n        if (shouldOverwrite(node.value, node.state, jsonValue, jsonState)) {\n          node.value = jsonValue;\n          node.state = jsonState;\n          this.emit(\"change\", node.getPath(), node.toJSON());\n        }\n      } else if (node instanceof Node) {\n        if (\n          shouldOverwrite(\n            new Ref(this, node.getPath(), jsonState),\n            node.state,\n            jsonValue,\n            jsonState\n          )\n        ) {\n          const newNode = this.createEdgeAt(path, jsonState);\n          newNode.value = jsonValue;\n          this.emit(\"change\", newNode.getPath(), newNode.toJSON());\n        }\n      } else {\n        const newNode = this.createEdgeAt(path, jsonState);\n        newNode.value = jsonValue;\n        this.emit(\"change\", newNode.getPath(), newNode.toJSON());\n      }\n    }\n    return this;\n  }\n\n  private setPathInternal(path: string, value: ISetValue, state: number) {\n    if (value instanceof Ref) {\n      this.setEdgePathInternal(path, value, state);\n    } else if (value != null && typeof value === \"object\") {\n      for (const [k, v] of Object.entries(value)) {\n        this.setPathInternal(path + SEPERATOR + k, v, state);\n      }\n    } else {\n      this.setEdgePathInternal(path, value, state);\n    }\n  }\n\n  private setEdgePathInternal(\n    path: string,\n    value: IPrimitive | Ref,\n    state: number\n  ) {\n    const edge = this.createEdgeAt(path, state);\n    edge.value = value;\n    const edgePath = edge.getPath(),\n      edgeJSON = edge.toJSON();\n    this.emit(\"change\", edgePath, edgeJSON);\n    this.emit(\"set\", edgePath, edgeJSON);\n    return edge;\n  }\n\n  private createNodeAt(path: string, state: number): Node {\n    const keys = path.split(SEPERATOR),\n      key = keys.shift() as string;\n\n    let parent = this.entries.get(key);\n\n    if (!(parent instanceof Node)) {\n      parent = new Node(this, null, key, state);\n      this.entries.set(key, parent);\n    }\n\n    return keys.reduce<Node>((parent, key) => {\n      const node = parent.children.get(key);\n\n      if (node instanceof Node) {\n        return node;\n      } else if (node instanceof Edge) {\n        if (node.value instanceof Ref) {\n          const refNode = node.value.getNode();\n\n          if (refNode instanceof Node) {\n            return refNode;\n          }\n        }\n      }\n      const newNode = new Node(this, parent, key, state);\n      parent.children.set(key, newNode);\n      return newNode;\n    }, parent);\n  }\n\n  private createEdgeAt(path: string, state: number): Edge {\n    const [parentPath, key] = getParentPathAndKey(path),\n      parent = parentPath ? this.createNodeAt(parentPath, state) : null;\n\n    let node = parent?.children.get(key);\n\n    if (node instanceof Edge) {\n      node.state = state;\n      return node;\n    } else {\n      node = new Edge(this, parent, key, state, null);\n      parent?.children.set(key, node);\n      return node;\n    }\n  }\n}\nexport function getParentPath(path: string) {\n  const index = path.lastIndexOf(\"/\");\n\n  if (index === -1) {\n    return undefined;\n  } else {\n    return path.substring(index + 1);\n  }\n}\n\nexport function getParentPathAndKey(\n  path: string\n): [parentPath: string | undefined, key: string] {\n  const index = path.lastIndexOf(\"/\");\n\n  if (index === -1) {\n    return [undefined, path];\n  } else {\n    return [path.substring(0, index), path.substring(index + 1)];\n  }\n}\n\nfunction getValueAtPath(\n  keys: string[],\n  node: Node | Edge | undefined,\n  values: Map<Node | Edge, IGetValue | undefined>\n): IGetValue | undefined {\n  if (!node) {\n    return undefined;\n  }\n  const seen = values.get(node);\n  if (seen) {\n    return seen;\n  }\n  if (node instanceof Node) {\n    const key = keys.shift() as string;\n\n    if (key) {\n      const child = node.children.get(key);\n\n      if (child) {\n        return getValueAtPath(keys, child, values);\n      } else {\n        node.graph.listenTo(node.getPath() + SEPERATOR + key);\n        values.set(node, undefined);\n        return undefined;\n      }\n    } else {\n      const children: {\n        [key: string | symbol | number]: IGetValue;\n      } = {};\n      values.set(node, children);\n      for (const [k, c] of node.children) {\n        const childPath = node.getPath() + SEPERATOR + k;\n        if (\n          c instanceof Edge &&\n          c.value instanceof Ref &&\n          c.getPath() === childPath\n        ) {\n          children[k] = new Ref(node.graph, childPath, c.state);\n        } else {\n          const value = getValueAtPath(keys, c, values);\n\n          if (value !== undefined) {\n            children[k] = value;\n          } else {\n            children[k] = new Ref(node.graph, childPath, c.state);\n          }\n        }\n      }\n      return children;\n    }\n  } else if (node.value instanceof Ref) {\n    if (node.getPath() === node.value.getPath()) {\n      node.graph.listenTo(node.value.getPath());\n      values.set(node, undefined);\n      return undefined;\n    }\n    const refNode = node.value.getNode();\n\n    if (refNode) {\n      return getValueAtPath(keys, refNode, values);\n    } else {\n      node.graph.listenTo(node.value.getPath());\n      values.set(node, undefined);\n      return undefined;\n    }\n  }\n  values.set(node, node.value);\n  return node.value;\n}\n\nfunction getNodeAtPath(\n  keys: string[],\n  node: Node | Edge | undefined\n): Node | Edge | undefined {\n  if (!node) {\n    return undefined;\n  } else if (node instanceof Node) {\n    const key = keys.shift() as string;\n\n    if (key) {\n      const child = node.children.get(key);\n\n      if (child) {\n        return getNodeAtPath(keys, child);\n      } else {\n        return undefined;\n      }\n    } else {\n      return node;\n    }\n  } else if (node.value instanceof Ref) {\n    if (node.getPath() === node.value.getPath()) {\n      return node;\n    }\n    const refNode = node.value.getNode();\n\n    if (refNode) {\n      return getNodeAtPath(keys, refNode);\n    } else {\n      return undefined;\n    }\n  }\n  return node;\n}\n\nfunction shouldOverwrite(\n  localValue: IPrimitive | Ref,\n  localState: number,\n  remoteValue: IPrimitive | Ref,\n  remoteState: number\n) {\n  return (\n    remoteState >= localState &&\n    (localState === remoteState\n      ? JSON.stringify(remoteValue) > JSON.stringify(localValue)\n      : true)\n  );\n}\n\nfunction nodeMapToJSON(\n  entries: Map<string, Edge | Node>,\n  json: { [key: string | symbol | number]: IEdgeJSON | IRefJSON | INodeJSON },\n  path?: string,\n  recur = false\n) {\n  const prefix = path ? path + SEPERATOR : \"\";\n  entries.forEach((child, key) => {\n    if (child instanceof Node) {\n      if (recur) {\n        nodeMapToJSON(child.children, json, prefix + key, recur);\n      } else {\n        json[prefix + key] = child.toJSON();\n      }\n    } else {\n      json[prefix + key] = child.toJSON();\n    }\n  });\n  return json;\n}\n"],"names":["has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","Entry","graph","parent","key","state","constructor","getPath","toJSON","Node","children","Map","toNodesJSON","nodeMapToJSON","child","id","Edge","value","super","Ref","path","get","set","getValue","getValueAtPath","getNode","getNodeAtPath","getState","callback","onChange","startsWith","then","onfulfilled","onrejected","promise","Promise","resolve","Graph","listening","Set","Date","now","entries","getEntries","keys","split","node","shift","listenTo","setPathInternal","merge","json","isListeningTo","mergePathInternal","add","listeningPath","jsonState","shouldOverwrite","createNodeAt","jsonValue","newNode","createEdgeAt","setEdgePathInternal","k","v","edge","edgePath","edgeJSON","reduce","refNode","parentPath","getParentPathAndKey","getParentPath","index","lastIndexOf","substring","values","seen","c","childPath","localValue","localState","remoteValue","remoteState","JSON","stringify","recur","forEach"],"mappings":"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"}