{"version":3,"file":"index.js","sources":["../src/Ref.ts","../src/types.ts","../src/Entry.ts","../src/Edge.ts","../node_modules/eventemitter3/index.js","../src/Node.ts","../src/Graph.ts"],"sourcesContent":["import type { Graph } from \"./Graph\";\nimport type { IEntryJSON } from \"./Entry\";\nimport {\n  IGraph,\n  IGraphValue,\n  IKeyOf,\n  IRefValue,\n  IValueOf,\n  SEPERATOR,\n} from \"./types\";\n\nexport interface IRefJSON extends IEntryJSON {\n  id: string;\n}\n\nexport class Ref<T extends IGraphValue = IGraphValue>\n  implements PromiseLike<IRefValue<T> | undefined>\n{\n  protected graph: Graph;\n  protected path: string;\n  protected state: number;\n  protected waitMS: number | undefined;\n\n  constructor(graph: Graph, path: string, state: number) {\n    this.graph = graph;\n    this.path = path;\n    this.state = state;\n  }\n\n  get<SK extends IKeyOf<T> = IKeyOf<T>>(\n    key: SK\n  ): Ref<\n    T[SK] extends IGraph\n      ? T[SK]\n      : T[SK] extends Ref<infer V>\n      ? V\n      : IValueOf<T[SK]>\n  > {\n    return new Ref(this.graph, this.path + SEPERATOR + key, this.state);\n  }\n  set(value: T | Ref<T>) {\n    this.graph.set(this.path, value);\n    return this;\n  }\n  delete() {\n    this.graph.delete(this.path);\n    return this;\n  }\n  getValue(): IRefValue<T> | undefined {\n    return this.graph.getValueAtPath<T>(this.path);\n  }\n  getPath() {\n    return this.path;\n  }\n  getNode() {\n    return this.graph.getNodeAtPath(this.path);\n  }\n  getState() {\n    return this.state;\n  }\n\n  on(callback: (value: IRefValue<T> | undefined) => void) {\n    let currentNode = this.getNode();\n\n    const onChange = (path: string) => {\n      const node = this.getNode();\n\n      if (node) {\n        const value = node.getValue() as IRefValue<T>;\n\n        if (currentNode !== node) {\n          this.graph.listenAtPath(node.getPath(), value === undefined);\n          currentNode = node;\n        }\n\n        if (path.startsWith(node.getPath())) {\n          callback(value);\n        }\n      } else {\n        currentNode = node;\n      }\n    };\n    this.graph.on(\"change\", onChange);\n\n    const value = currentNode?.getValue() as IRefValue<T>;\n    this.graph.listenAtPath(\n      currentNode?.getPath() || this.path,\n      value === undefined\n    );\n\n    if (value !== undefined) {\n      callback(value);\n    }\n\n    return () => {\n      this.graph.off(\"change\", onChange);\n    };\n  }\n\n  once(callback: (value: IRefValue<T> | undefined) => void) {\n    const off = this.on((value) => {\n      off();\n      callback(value);\n    });\n    return this;\n  }\n\n  getWaitMS() {\n    return this.waitMS === undefined ? this.graph.getWaitMS() : this.waitMS;\n  }\n  setWaitMS(waitMS: number) {\n    this.waitMS = waitMS;\n    return this;\n  }\n\n  then<R = IRefValue<T> | undefined, E = never>(\n    onfulfilled?:\n      | ((value: IRefValue<T> | undefined) => R | PromiseLike<R>)\n      | undefined\n      | null,\n    onrejected?: ((reason: any) => E | PromiseLike<E>) | undefined | null\n  ): Promise<R | E> {\n    const value = this.getValue();\n    let promise: Promise<IRefValue<T> | undefined>;\n\n    if (value !== undefined) {\n      promise = Promise.resolve<IRefValue<T> | undefined>(value);\n    } else {\n      promise = new Promise((resolve, reject) => {\n        const off = this.on((value) => {\n          clearTimeout(timeoutId);\n          off();\n          resolve(value);\n        });\n        const timeoutId = setTimeout(() => {\n          off();\n          reject(\n            new Error(\n              `Request took longer than ${this.getWaitMS()}ms to resolve`\n            )\n          );\n        }, this.getWaitMS());\n      });\n    }\n\n    return promise.then(onfulfilled, onrejected);\n  }\n\n  toJSON(): IRefJSON {\n    return {\n      id: this.path,\n      state: this.state,\n    };\n  }\n}\n","import type { Ref } from \"./Ref\";\n\nexport type IKeyOf<T> = Exclude<keyof T, symbol | number>;\nexport type IValueOf<T> = Extract<T, IPrimitive>;\n\nexport type IPrimitive = string | number | boolean | null;\n\nexport type IGraph = { [S in string]: IGraphValue } & {\n  [S in number]: IGraphValue;\n};\nexport type IGraphValue = IPrimitive | Ref | IGraph;\n\nexport type IRefValueChild<T extends IGraphValue> = T extends IGraph\n  ? Ref<T>\n  : T extends Ref<infer V>\n  ? Ref<V>\n  : T;\n\nexport type IRefValue<T extends IGraphValue> = T extends IGraph\n  ? { [K in IKeyOf<T>]: IRefValueChild<T[K]> }\n  : T extends Ref<infer V>\n  ? V\n  : T;\n\nexport const SEPERATOR = \"/\";\n","import type { Graph } from \"./Graph\";\nimport { SEPERATOR } from \"./types\";\n\nexport interface IEntryJSON {\n  state: number;\n}\n\nexport class Entry {\n  graph: Graph;\n  parent: Entry | null;\n  key: string;\n  state: number;\n\n  constructor(graph: Graph, parent: Entry | null, key: string, state: number) {\n    this.graph = graph;\n    this.parent = parent;\n    this.key = key;\n    this.state = state;\n  }\n\n  getValue() {\n    return this.graph.getValueAtPath(this.getPath());\n  }\n  getPath(): string {\n    return this.parent\n      ? this.parent.getPath() + SEPERATOR + this.key\n      : this.key;\n  }\n\n  toJSON(): IEntryJSON {\n    return {\n      state: this.state,\n    };\n  }\n}\n","import type { Graph } from \"./Graph\";\nimport type { IEntryJSON } from \"./Entry\";\nimport { IRefJSON, Ref } from \"./Ref\";\nimport { Entry } from \"./Entry\";\nimport type { IPrimitive } from \"./types\";\n\nexport interface IEdgeJSON extends IEntryJSON {\n  value: IPrimitive;\n}\n\nexport class Edge extends Entry {\n  value: IPrimitive | Ref;\n\n  constructor(\n    graph: Graph,\n    parent: Entry | null,\n    key: string,\n    state: number,\n    value: IPrimitive\n  ) {\n    super(graph, parent, key, state);\n    this.value = value;\n  }\n\n  getPath() {\n    return this.value instanceof Ref ? this.value.getPath() : super.getPath();\n  }\n\n  toJSON(): IEdgeJSON | IRefJSON {\n    return this.value instanceof Ref\n      ? this.value.toJSON()\n      : {\n          ...super.toJSON(),\n          value: this.value,\n        };\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { Entry } from \"./Entry\";\nimport type { Edge, IEdgeJSON } from \"./Edge\";\nimport type { IEntryJSON } from \"./Entry\";\nimport type { IRefJSON } from \"./Ref\";\n\nexport interface INodeJSON extends IEntryJSON {\n  children: {\n    [key: string]: IEdgeJSON | IRefJSON;\n  };\n}\n\nexport class Node extends Entry {\n  children: { [key: string]: Edge | Node } = {};\n\n  toJSON(): INodeJSON {\n    return {\n      ...super.toJSON(),\n      children: Object.entries(this.children).reduce(\n        (children, [key, child]) => {\n          if (child instanceof Node) {\n            children[key] = { state: child.state, id: child.getPath() };\n          } else {\n            children[key] = child.toJSON();\n          }\n          return children;\n        },\n        {} as INodeJSON[\"children\"]\n      ),\n    };\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport type { IEdgeJSON } from \"./Edge\";\nimport { Edge } from \"./Edge\";\nimport type { IEntryJSON } from \"./Entry\";\nimport type { INodeJSON } from \"./Node\";\nimport { Node } from \"./Node\";\nimport type { IRefJSON } from \"./Ref\";\nimport { Ref } from \"./Ref\";\nimport type {\n  IGraph,\n  IGraphValue,\n  IKeyOf,\n  IRefValue,\n  IPrimitive,\n} from \"./types\";\nimport { SEPERATOR } from \"./types\";\n\nexport interface IDeleteJSON extends IEntryJSON {\n  delete: true;\n}\n\nexport interface IGraphEvents<T extends IGraph> {\n  get(this: Graph<T>, path: string): void;\n  set(\n    this: Graph<T>,\n    path: string,\n    value: IRefJSON | IEdgeJSON | INodeJSON | IDeleteJSON\n  ): void;\n  change(\n    this: Graph<T>,\n    path: string,\n    value: IRefJSON | IEdgeJSON | INodeJSON | IDeleteJSON\n  ): void;\n}\n\nexport interface IGraphJSON extends IEntryJSON {\n  entries: {\n    [key: string]: IEdgeJSON | INodeJSON | IPrimitive;\n  };\n}\n\nexport class Graph<T extends IGraph = IGraph> extends EventEmitter<\n  IGraphEvents<T>\n> {\n  protected state = Date.now();\n  protected entries: { [key: string]: Node | Edge } = {};\n  protected listeningPaths: Set<string> = new Set();\n  protected waitMS = 5000;\n\n  setWaitMS(waitMS: number) {\n    this.waitMS = waitMS;\n    return this;\n  }\n  getWaitMS() {\n    return this.waitMS;\n  }\n\n  getEntries() {\n    return this.entries;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  get<K extends IKeyOf<T> = IKeyOf<T>>(key: K): Ref<T[K]> {\n    return new Ref(this, key, this.state);\n  }\n\n  getValueAtPath<V extends IGraphValue = IGraphValue>(\n    path: string\n  ): IRefValue<V> | undefined {\n    const node = this.getNodeAtPath(path);\n    let value: IRefValue<V> | undefined;\n\n    if (node) {\n      value = getValueAtNode<V>(this, node);\n      if (value === undefined) {\n        this.listenAtPath(path);\n      }\n    } else {\n      this.listenAtPath(path);\n    }\n\n    return value;\n  }\n\n  getNodeAtPath(path: string): Node | Edge | undefined {\n    return getNodeAtPath(this, path, {});\n  }\n\n  set(path: string, value: IGraphValue) {\n    this.state = Date.now();\n    this.setPathInternal(path, value, this.state);\n    return this;\n  }\n\n  delete(path: string) {\n    this.state = Date.now();\n    this.deletePathInternal(path, this.state);\n    return this;\n  }\n\n  merge(path: string, json: IRefJSON | IEdgeJSON | INodeJSON | IDeleteJSON) {\n    if (this.isListening(path)) {\n      const maxState = Date.now();\n\n      if (\"children\" in json) {\n        for (const [key, child] of Object.entries(json.children)) {\n          this.mergePathInternal(path + SEPERATOR + key, child, maxState);\n        }\n      } else if (\"delete\" in json) {\n        this.mergeDeletePathInternal(path, json.state, maxState);\n      } else {\n        this.mergePathInternal(path, json, maxState);\n      }\n    }\n    return this;\n  }\n\n  listenAtPath(path: string, emit = true) {\n    if (emit) {\n      this.emit(\"get\", path);\n    }\n    this.listeningPaths.add(path);\n    return this;\n  }\n\n  isListening(path: string) {\n    for (const listeningPath of this.listeningPaths) {\n      if (path.startsWith(listeningPath)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  toJSON(): IGraphJSON {\n    return {\n      state: this.state,\n      entries: Object.entries(this.entries).reduce((entries, [key, value]) => {\n        entries[key] = value.toJSON() as any;\n        return entries;\n      }, {} as IGraphJSON[\"entries\"]),\n    };\n  }\n\n  private mergePathInternal(\n    path: string,\n    json: IRefJSON | IEdgeJSON,\n    maxState: number\n  ) {\n    const jsonState = json.state;\n\n    if (jsonState > maxState) {\n      setTimeout(\n        () => this.mergePathEdgeInternal(path, json),\n        jsonState - maxState\n      );\n    } else {\n      this.mergePathEdgeInternal(path, json);\n    }\n\n    return this;\n  }\n\n  private mergePathEdgeInternal(path: string, json: IRefJSON | IEdgeJSON) {\n    const jsonState = json.state,\n      node = this.getNodeAtPath(path);\n\n    const jsonValue =\n      \"value\" in json ? json.value : new Ref(this, json.id, jsonState);\n\n    if (node instanceof Edge) {\n      if (shouldOverwrite(node.value, node.state, jsonValue, jsonState)) {\n        node.value = jsonValue;\n        node.state = jsonState;\n        this.emit(\"change\", node.getPath(), node.toJSON());\n      }\n    } else if (node instanceof Node) {\n      if (\n        shouldOverwrite(\n          new Ref(this, node.getPath(), jsonState),\n          node.state,\n          jsonValue,\n          jsonState\n        )\n      ) {\n        const newNode = this.createEdgeAt(path, jsonState);\n        newNode.value = jsonValue;\n        this.emit(\"change\", newNode.getPath(), newNode.toJSON());\n      }\n    } else {\n      const newNode = this.createEdgeAt(path, jsonState);\n      newNode.value = jsonValue;\n      this.emit(\"change\", newNode.getPath(), newNode.toJSON());\n    }\n    return this;\n  }\n\n  private mergeDeletePathInternal(\n    path: string,\n    jsonState: number,\n    maxState: number\n  ) {\n    if (jsonState > maxState) {\n      setTimeout(\n        () => this.mergeDeletePathEdgeInternal(path, jsonState),\n        jsonState - maxState\n      );\n    } else {\n      this.mergeDeletePathEdgeInternal(path, jsonState);\n    }\n    return this;\n  }\n\n  private mergeDeletePathEdgeInternal(path: string, jsonState: number) {\n    const [parentPath, key] = getParentPathAndKey(path),\n      node = this.getNodeAtPath(path),\n      parent = parentPath ? this.getNodeAtPath(parentPath) : null;\n\n    if (node) {\n      if (shouldDelete(node.state, jsonState)) {\n        if (parent instanceof Node) {\n          delete parent.children[key];\n          this.emit(\"change\", parentPath as string, parent.toJSON());\n        }\n      }\n    }\n    return this;\n  }\n\n  private setPathInternal(path: string, value: IGraphValue, state: number) {\n    if (value instanceof Ref) {\n      this.setEdgePathInternal(path, value, state);\n    } else if (value !== null && typeof value === \"object\") {\n      for (const [k, v] of Object.entries(value)) {\n        this.setPathInternal(path + SEPERATOR + k, v, state);\n      }\n    } else {\n      this.setEdgePathInternal(path, value, state);\n    }\n  }\n\n  private setEdgePathInternal(\n    path: string,\n    value: IPrimitive | Ref,\n    state: number\n  ) {\n    const edge = this.createEdgeAt(path, state);\n    edge.value = value;\n    const edgePath = edge.getPath(),\n      edgeJSON = edge.toJSON();\n    this.emit(\"change\", edgePath, edgeJSON);\n    this.emit(\"set\", edgePath, edgeJSON);\n    return edge;\n  }\n\n  private createNodeAt(path: string, state: number): Node {\n    const keys = path.split(SEPERATOR),\n      key = keys.shift() as string;\n\n    let parent = this.entries[key];\n\n    if (!(parent instanceof Node)) {\n      parent = new Node(this, null, key, state);\n      this.entries[key] = parent;\n    }\n\n    return keys.reduce<Node>((parent, key) => {\n      const node = parent.children[key];\n\n      if (node instanceof Node) {\n        return node;\n      } else if (node instanceof Edge) {\n        if (node.value instanceof Ref) {\n          const refNode = node.value.getNode();\n\n          if (refNode instanceof Node) {\n            return refNode;\n          }\n        }\n      }\n      const newNode = new Node(this, parent, key, state);\n      parent.children[key] = newNode;\n      return newNode;\n    }, parent);\n  }\n\n  private createEdgeAt(path: string, state: number): Edge {\n    const [parentPath, key] = getParentPathAndKey(path),\n      parent = parentPath ? this.createNodeAt(parentPath, state) : null;\n\n    let node = parent?.children[key];\n\n    if (node instanceof Edge) {\n      node.state = state;\n      return node;\n    } else {\n      node = new Edge(this, parent, key, state, null);\n      if (parent) {\n        parent.children[key] = node;\n      } else {\n        this.entries[key] = node;\n      }\n      return node;\n    }\n  }\n\n  private deletePathInternal(path: string, state: number) {\n    const [parentPath, key] = getParentPathAndKey(path),\n      parent = parentPath ? this.createNodeAt(parentPath, state) : null;\n\n    if (parent) {\n      delete parent.children[key];\n      this.emit(\"change\", path, { state, delete: true });\n      this.emit(\"set\", path, { state, delete: true });\n    }\n  }\n}\n\nexport function getParentPathAndKey(\n  path: string\n): [parentPath: string | undefined, key: string] {\n  const index = path.lastIndexOf(\"/\");\n\n  if (index === -1) {\n    return [undefined, path];\n  } else {\n    return [path.substring(0, index), path.substring(index + 1)];\n  }\n}\n\nfunction getNodeAtPath(\n  graph: Graph,\n  path: string,\n  nodes: { [key: string]: Node | Edge | null }\n) {\n  const seen = nodes[path];\n\n  if (seen !== undefined) {\n    return seen || undefined;\n  } else {\n    const keys = path.split(SEPERATOR),\n      key = keys.shift() as string,\n      node = graph.getEntries()[key];\n\n    if (node && keys.length) {\n      nodes[key] = node;\n      return getNodeAtPathInternal(graph, key, node, keys, nodes);\n    } else {\n      return node;\n    }\n  }\n}\n\nfunction getNodeAtPathInternal(\n  graph: Graph,\n  path: string,\n  node: Node | Edge,\n  keys: string[],\n  nodes: { [key: string]: Node | Edge | null }\n): Node | Edge | undefined {\n  if (node instanceof Node) {\n    const key = keys.shift() as string;\n\n    if (key) {\n      const child = node.children[key],\n        childPath = path + SEPERATOR + key;\n\n      if (child) {\n        nodes[childPath] = child;\n        return getNodeAtPathInternal(graph, childPath, child, keys, nodes);\n      } else {\n        nodes[childPath] = null;\n        return undefined;\n      }\n    } else {\n      nodes[path] = node;\n      return node;\n    }\n  } else if (node.value instanceof Ref) {\n    const refPath = node.value.getPath(),\n      refNode = getNodeAtPath(graph, refPath, nodes);\n\n    if (refNode && refNode !== node) {\n      return getNodeAtPathInternal(graph, path, refNode, keys, nodes);\n    } else {\n      nodes[refPath] = null;\n      return undefined;\n    }\n  } else {\n    nodes[path] = node;\n    return node;\n  }\n}\n\nfunction getValueAtNode<T extends IGraphValue = IGraphValue>(\n  graph: Graph,\n  node: Node | Edge | undefined,\n  seen: Set<string> = new Set()\n): IRefValue<T> | undefined {\n  if (!node) {\n    return undefined;\n  } else if (node instanceof Node) {\n    const children: IGraph = {};\n    for (const [k, c] of Object.entries(node.children)) {\n      const childValue =\n        c instanceof Edge\n          ? c.value\n          : (children[k] = new Ref(graph, c.getPath(), c.state));\n      children[k] = childValue;\n    }\n    return children as IRefValue<T>;\n  } else if (node.value instanceof Ref) {\n    if (seen.has(node.value.getPath())) {\n      return undefined;\n    } else {\n      seen.add(node.value.getPath());\n    }\n    return getValueAtNode<T>(graph, node.value.getNode(), seen);\n  } else {\n    return node.value as IRefValue<T>;\n  }\n}\n\nfunction shouldOverwrite(\n  localValue: IPrimitive | Ref,\n  localState: number,\n  remoteValue: IPrimitive | Ref,\n  remoteState: number\n) {\n  return (\n    remoteState >= localState &&\n    (localState === remoteState\n      ? JSON.stringify(remoteValue).length > JSON.stringify(localValue).length\n      : true)\n  );\n}\n\nfunction shouldDelete(localState: number, remoteState: number) {\n  return remoteState >= localState;\n}\n"],"names":["Ref","constructor","graph","path","state","this","get","key","set","value","delete","getValue","getValueAtPath","getPath","getNode","getNodeAtPath","getState","on","callback","currentNode","onChange","node","listenAtPath","undefined","startsWith","off","once","getWaitMS","waitMS","setWaitMS","then","onfulfilled","onrejected","promise","Promise","resolve","reject","clearTimeout","timeoutId","setTimeout","Error","toJSON","id","Entry","parent","Edge","super","Object","assign","has","prototype","hasOwnProperty","prefix","Events","EE","fn","context","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","apply","j","removeAllListeners","prefixed","module","exports","Node","children","entries","reduce","child","Graph","Date","now","listeningPaths","Set","getEntries","getValueAtNode","setPathInternal","deletePathInternal","merge","json","isListening","maxState","mergePathInternal","mergeDeletePathInternal","add","listeningPath","jsonState","mergePathEdgeInternal","jsonValue","shouldOverwrite","newNode","createEdgeAt","mergeDeletePathEdgeInternal","parentPath","getParentPathAndKey","localState","setEdgePathInternal","k","v","edge","edgePath","edgeJSON","createNodeAt","keys","split","shift","refNode","index","lastIndexOf","substring","nodes","seen","getNodeAtPathInternal","childPath","refPath","c","childValue","localValue","remoteValue","remoteState","JSON","stringify"],"mappings":"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"}