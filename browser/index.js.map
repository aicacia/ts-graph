{"version":3,"file":"index.js","sources":["../src/Ref.ts","../src/types.ts","../src/Entry.ts","../src/Edge.ts","../node_modules/eventemitter3/index.js","../src/Node.ts","../src/Graph.ts"],"sourcesContent":["import type { Graph } from \"./Graph\";\nimport type { IEntryJSON } from \"./Entry\";\nimport {\n  IGraph,\n  IGraphValue,\n  IKeyOf,\n  IRefValue,\n  IValueOf,\n  SEPERATOR,\n} from \"./types\";\n\nexport interface IRefJSON extends IEntryJSON {\n  id: string;\n}\n\nexport class Ref<T extends IGraphValue = IGraphValue>\n  implements PromiseLike<IRefValue<T> | undefined>\n{\n  protected graph: Graph;\n  protected path: string;\n  protected state: number;\n  protected waitMS: number;\n\n  constructor(graph: Graph, path: string, state: number) {\n    this.graph = graph;\n    this.path = path;\n    this.state = state;\n    this.waitMS = graph.getWaitMS();\n  }\n\n  get<SK extends IKeyOf<T> = IKeyOf<T>>(\n    key: SK\n  ): Ref<\n    T[SK] extends IGraph\n      ? T[SK]\n      : T[SK] extends Ref<infer V>\n      ? V\n      : IValueOf<T[SK]>\n  > {\n    return new Ref(this.graph, this.path + SEPERATOR + key, this.state);\n  }\n  set(value: T | Ref<T>) {\n    this.graph.set(this.path, value);\n    return this;\n  }\n  getValue(): IRefValue<T> | undefined {\n    return this.graph.getValueAtPath<T>(this.path);\n  }\n  getPath() {\n    return this.path;\n  }\n  getNode() {\n    return this.graph.getNodeAtPath(this.path);\n  }\n  getState() {\n    return this.state;\n  }\n\n  on(callback: (value: IRefValue<T> | undefined) => void) {\n    let currentNode = this.getNode();\n\n    const onChange = (path: string) => {\n      const node = this.getNode();\n\n      if (node) {\n        const value = node.getValue() as IRefValue<T>;\n\n        if (currentNode !== node) {\n          this.graph.listenAtPath(node.getPath(), value === undefined);\n          currentNode = node;\n        }\n\n        if (path.startsWith(node.getPath())) {\n          callback(value);\n        }\n      } else {\n        currentNode = node;\n      }\n    };\n    this.graph.on(\"change\", onChange);\n\n    const value = currentNode?.getValue() as IRefValue<T>;\n    this.graph.listenAtPath(\n      currentNode?.getPath() || this.path,\n      value === undefined\n    );\n\n    if (value !== undefined) {\n      callback(value);\n    }\n\n    return () => {\n      this.graph.off(\"change\", onChange);\n    };\n  }\n\n  getWaitMS() {\n    return this.waitMS;\n  }\n  setWaitMS(waitMS: number) {\n    this.waitMS = waitMS;\n    return this;\n  }\n\n  then<R = IRefValue<T> | undefined, E = never>(\n    onfulfilled?:\n      | ((value: IRefValue<T> | undefined) => R | PromiseLike<R>)\n      | undefined\n      | null,\n    onrejected?: ((reason: any) => E | PromiseLike<E>) | undefined | null\n  ): PromiseLike<R | E> {\n    const value = this.getValue();\n    let promise: Promise<IRefValue<T> | undefined>;\n\n    if (value !== undefined) {\n      promise = Promise.resolve<IRefValue<T> | undefined>(value);\n    } else {\n      promise = new Promise((resolve, reject) => {\n        let resolved = false;\n        const off = this.on((value) => {\n          resolved = true;\n          off();\n          resolve(value);\n        });\n        setTimeout(() => {\n          if (!resolved) {\n            reject(\n              new Error(`Request took longer than ${this.waitMS}ms to resolve`)\n            );\n            off();\n          }\n        }, this.waitMS);\n      });\n    }\n\n    return promise.then(onfulfilled, onrejected);\n  }\n\n  toJSON(): IRefJSON {\n    return {\n      id: this.path,\n      state: this.state,\n    };\n  }\n}\n","import type { Ref } from \"./Ref\";\n\nexport type IKeyOf<T> = Exclude<keyof T, symbol | number>;\nexport type IValueOf<T> = Extract<T, IPrimitive>;\n\nexport type IPrimitive = string | number | boolean | null;\n\nexport type IGraph = { [S in string]: IGraphValue } & {\n  [S in number]: IGraphValue;\n};\nexport type IGraphValue = IPrimitive | Ref | IGraph;\n\nexport type IRefValueChild<T extends IGraphValue> = T extends IGraph\n  ? Ref<T>\n  : T extends Ref<infer V>\n  ? Ref<V>\n  : T;\n\nexport type IRefValue<T extends IGraphValue> = T extends IGraph\n  ? { [K in IKeyOf<T>]: IRefValueChild<T[K]> }\n  : T extends Ref<infer V>\n  ? V\n  : T;\n\nexport const SEPERATOR = \"/\";\n","import type { Graph } from \"./Graph\";\nimport { SEPERATOR } from \"./types\";\n\nexport interface IEntryJSON {\n  state: number;\n}\n\nexport class Entry {\n  graph: Graph;\n  parent: Entry | null;\n  key: string;\n  state: number;\n\n  constructor(graph: Graph, parent: Entry | null, key: string, state: number) {\n    this.graph = graph;\n    this.parent = parent;\n    this.key = key;\n    this.state = state;\n  }\n\n  getValue() {\n    return this.graph.getValueAtPath(this.getPath());\n  }\n  getPath(): string {\n    return this.parent\n      ? this.parent.getPath() + SEPERATOR + this.key\n      : this.key;\n  }\n\n  toJSON(): IEntryJSON {\n    return {\n      state: this.state,\n    };\n  }\n}\n","import type { Graph } from \"./Graph\";\nimport type { IEntryJSON } from \"./Entry\";\nimport { IRefJSON, Ref } from \"./Ref\";\nimport { Entry } from \"./Entry\";\nimport type { IPrimitive } from \"./types\";\n\nexport interface IEdgeJSON extends IEntryJSON {\n  value: IPrimitive;\n}\n\nexport class Edge extends Entry {\n  value: IPrimitive | Ref;\n\n  constructor(\n    graph: Graph,\n    parent: Entry | null,\n    key: string,\n    state: number,\n    value: IPrimitive\n  ) {\n    super(graph, parent, key, state);\n    this.value = value;\n  }\n\n  getPath() {\n    return this.value instanceof Ref ? this.value.getPath() : super.getPath();\n  }\n\n  toJSON(): IEdgeJSON | IRefJSON {\n    return this.value instanceof Ref\n      ? this.value.toJSON()\n      : {\n          ...super.toJSON(),\n          value: this.value,\n        };\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { Entry } from \"./Entry\";\nimport type { Edge, IEdgeJSON } from \"./Edge\";\nimport type { IEntryJSON } from \"./Entry\";\nimport type { IRefJSON } from \"./Ref\";\n\nexport interface INodeJSON extends IEntryJSON {\n  children: {\n    [key: string]: IEdgeJSON | IRefJSON;\n  };\n}\n\nexport class Node extends Entry {\n  children: Map<string, Edge | Node> = new Map();\n\n  toJSON(): INodeJSON {\n    const children: INodeJSON[\"children\"] = {};\n    for (const [key, child] of this.children) {\n      if (child instanceof Node) {\n        children[key] = { state: child.state, id: child.getPath() };\n      } else {\n        children[key] = child.toJSON();\n      }\n    }\n    return {\n      ...super.toJSON(),\n      children,\n    };\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport type { IEdgeJSON } from \"./Edge\";\nimport { Edge } from \"./Edge\";\nimport type { INodeJSON } from \"./Node\";\nimport { Node } from \"./Node\";\nimport type { IRefJSON } from \"./Ref\";\nimport { Ref } from \"./Ref\";\nimport type {\n  IGraph,\n  IGraphValue,\n  IKeyOf,\n  IRefValue,\n  IPrimitive,\n} from \"./types\";\nimport { SEPERATOR } from \"./types\";\n\nexport interface IGraphEvents<T extends IGraph> {\n  get(this: Graph<T>, path: string): void;\n  set(this: Graph<T>, path: string, value: IRefJSON | IEdgeJSON): void;\n  change(\n    this: Graph<T>,\n    path: string,\n    value: IRefJSON | IEdgeJSON | INodeJSON\n  ): void;\n}\n\nexport class Graph<T extends IGraph = IGraph> extends EventEmitter<\n  IGraphEvents<T>\n> {\n  protected state = Date.now();\n  protected entries: Map<string, Node | Edge> = new Map();\n  protected listeningPaths: Set<string> = new Set();\n  protected waitMS = 5000;\n\n  setWaitMS(waitMS: number) {\n    this.waitMS = waitMS;\n    return this;\n  }\n  getWaitMS() {\n    return this.waitMS;\n  }\n\n  getEntries(): ReadonlyMap<string, Node | Edge> {\n    return this.entries;\n  }\n\n  get<K extends IKeyOf<T> = IKeyOf<T>>(key: K): Ref<T[K]> {\n    return new Ref(this, key, this.state);\n  }\n\n  getValueAtPath<V extends IGraphValue = IGraphValue>(\n    path: string\n  ): IRefValue<V> | undefined {\n    const node = this.getNodeAtPath(path);\n    let value: IRefValue<V> | undefined;\n\n    if (node) {\n      value = getValueAtNode<V>(this, node);\n      if (value === undefined) {\n        this.listenAtPath(path);\n      }\n    } else {\n      this.listenAtPath(path);\n    }\n\n    return value;\n  }\n\n  getNodeAtPath(path: string): Node | Edge | undefined {\n    return getNodeAtPath(this, path, new Map());\n  }\n\n  set(path: string, value: IGraphValue) {\n    this.state = Date.now();\n    this.setPathInternal(path, value, this.state);\n    return this;\n  }\n\n  merge(path: string, json: IRefJSON | IEdgeJSON | INodeJSON) {\n    if (this.isListening(path)) {\n      const maxState = Date.now();\n\n      if (\"children\" in json) {\n        for (const [key, child] of Object.entries(json.children)) {\n          this.mergePathInternal(path + SEPERATOR + key, child, maxState);\n        }\n      } else {\n        this.mergePathInternal(path, json, maxState);\n      }\n    }\n    return this;\n  }\n\n  listenAtPath(path: string, emit = true) {\n    if (emit) {\n      this.emit(\"get\", path);\n    }\n    this.listeningPaths.add(path);\n    return this;\n  }\n\n  isListening(path: string) {\n    for (const listeningPath of this.listeningPaths) {\n      if (path.startsWith(listeningPath)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private mergePathInternal(\n    path: string,\n    json: IRefJSON | IEdgeJSON,\n    maxState: number\n  ) {\n    const jsonState = json.state;\n\n    if (jsonState > maxState) {\n      setTimeout(\n        () => this.mergePathEdgeInternal(path, json),\n        jsonState - maxState\n      );\n    } else {\n      this.mergePathEdgeInternal(path, json);\n    }\n\n    return this;\n  }\n\n  private mergePathEdgeInternal(path: string, json: IRefJSON | IEdgeJSON) {\n    const jsonState = json.state,\n      node = this.getNodeAtPath(path);\n\n    const jsonValue =\n      \"value\" in json ? json.value : new Ref(this, json.id, jsonState);\n\n    if (node instanceof Edge) {\n      if (shouldOverwrite(node.value, node.state, jsonValue, jsonState)) {\n        node.value = jsonValue;\n        node.state = jsonState;\n        this.emit(\"change\", node.getPath(), node.toJSON());\n      }\n    } else if (node instanceof Node) {\n      if (\n        shouldOverwrite(\n          new Ref(this, node.getPath(), jsonState),\n          node.state,\n          jsonValue,\n          jsonState\n        )\n      ) {\n        const newNode = this.createEdgeAt(path, jsonState);\n        newNode.value = jsonValue;\n        this.emit(\"change\", newNode.getPath(), newNode.toJSON());\n      }\n    } else {\n      const newNode = this.createEdgeAt(path, jsonState);\n      newNode.value = jsonValue;\n      this.emit(\"change\", newNode.getPath(), newNode.toJSON());\n    }\n    return this;\n  }\n\n  private setPathInternal(path: string, value: IGraphValue, state: number) {\n    if (value instanceof Ref) {\n      this.setEdgePathInternal(path, value, state);\n    } else if (value !== null && typeof value === \"object\") {\n      for (const [k, v] of Object.entries(value)) {\n        this.setPathInternal(path + SEPERATOR + k, v, state);\n      }\n    } else {\n      this.setEdgePathInternal(path, value, state);\n    }\n  }\n\n  private setEdgePathInternal(\n    path: string,\n    value: IPrimitive | Ref,\n    state: number\n  ) {\n    const edge = this.createEdgeAt(path, state);\n    edge.value = value;\n    const edgePath = edge.getPath(),\n      edgeJSON = edge.toJSON();\n    this.emit(\"change\", edgePath, edgeJSON);\n    this.emit(\"set\", edgePath, edgeJSON);\n    return edge;\n  }\n\n  private createNodeAt(path: string, state: number): Node {\n    const keys = path.split(SEPERATOR),\n      key = keys.shift() as string;\n\n    let parent = this.entries.get(key);\n\n    if (!(parent instanceof Node)) {\n      parent = new Node(this, null, key, state);\n      this.entries.set(key, parent);\n    }\n\n    return keys.reduce<Node>((parent, key) => {\n      const node = parent.children.get(key);\n\n      if (node instanceof Node) {\n        return node;\n      } else if (node instanceof Edge) {\n        if (node.value instanceof Ref) {\n          const refNode = node.value.getNode();\n\n          if (refNode instanceof Node) {\n            return refNode;\n          }\n        }\n      }\n      const newNode = new Node(this, parent, key, state);\n      parent.children.set(key, newNode);\n      return newNode;\n    }, parent);\n  }\n\n  private createEdgeAt(path: string, state: number): Edge {\n    const [parentPath, key] = getParentPathAndKey(path),\n      parent = parentPath ? this.createNodeAt(parentPath, state) : null;\n\n    let node = parent?.children.get(key);\n\n    if (node instanceof Edge) {\n      node.state = state;\n      return node;\n    } else {\n      node = new Edge(this, parent, key, state, null);\n      if (parent) {\n        parent?.children.set(key, node);\n      } else {\n        this.entries.set(key, node);\n      }\n      return node;\n    }\n  }\n}\n\nexport function getParentPathAndKey(\n  path: string\n): [parentPath: string | undefined, key: string] {\n  const index = path.lastIndexOf(\"/\");\n\n  if (index === -1) {\n    return [undefined, path];\n  } else {\n    return [path.substring(0, index), path.substring(index + 1)];\n  }\n}\n\nfunction getNodeAtPath(\n  graph: Graph,\n  path: string,\n  nodes: Map<string, Node | Edge | null>\n) {\n  const seen = nodes.get(path);\n\n  if (seen !== undefined) {\n    return seen || undefined;\n  } else {\n    const keys = path.split(SEPERATOR),\n      key = keys.shift() as string,\n      node = graph.getEntries().get(key);\n\n    if (node && keys.length) {\n      nodes.set(key, node);\n      return getNodeAtPathInternal(graph, key, node, keys, nodes);\n    } else {\n      return node;\n    }\n  }\n}\n\nfunction getNodeAtPathInternal(\n  graph: Graph,\n  path: string,\n  node: Node | Edge,\n  keys: string[],\n  nodes: Map<string, Node | Edge | null> = new Map()\n): Node | Edge | undefined {\n  if (node instanceof Node) {\n    const key = keys.shift() as string;\n\n    if (key) {\n      const child = node.children.get(key),\n        childPath = path + SEPERATOR + key;\n\n      if (child) {\n        nodes.set(childPath, child);\n        return getNodeAtPathInternal(graph, childPath, child, keys, nodes);\n      } else {\n        nodes.set(childPath, null);\n        return undefined;\n      }\n    } else {\n      nodes.set(path, node);\n      return node;\n    }\n  } else if (node.value instanceof Ref) {\n    const refPath = node.value.getPath(),\n      refNode = getNodeAtPath(graph, refPath, nodes);\n\n    if (refNode && refNode !== node) {\n      return getNodeAtPathInternal(graph, path, refNode, keys, nodes);\n    } else {\n      nodes.set(refPath, null);\n      return undefined;\n    }\n  } else {\n    nodes.set(path, node);\n    return node;\n  }\n}\n\nfunction getValueAtNode<T extends IGraphValue = IGraphValue>(\n  graph: Graph,\n  node: Node | Edge | undefined,\n  seen: Set<string> = new Set()\n): IRefValue<T> | undefined {\n  if (!node) {\n    return undefined;\n  } else if (node instanceof Node) {\n    const children: IGraph = {};\n    for (const [k, c] of node.children) {\n      const childValue =\n        c instanceof Edge\n          ? c.value\n          : (children[k] = new Ref(graph, c.getPath(), c.state));\n      children[k] = childValue;\n    }\n    return children as IRefValue<T>;\n  } else if (node.value instanceof Ref) {\n    if (seen.has(node.value.getPath())) {\n      return undefined;\n    } else {\n      seen.add(node.value.getPath());\n    }\n    return getValueAtNode<T>(graph, node.value.getNode(), seen);\n  } else {\n    return node.value as IRefValue<T>;\n  }\n}\n\nfunction shouldOverwrite(\n  localValue: IPrimitive | Ref,\n  localState: number,\n  remoteValue: IPrimitive | Ref,\n  remoteState: number\n) {\n  return (\n    remoteState >= localState &&\n    (localState === remoteState\n      ? JSON.stringify(remoteValue).length > JSON.stringify(localValue).length\n      : true)\n  );\n}\n"],"names":["Ref","graph","path","state","waitMS","constructor","this","getWaitMS","get","key","set","value","getValue","getValueAtPath","getPath","getNode","getNodeAtPath","getState","on","callback","currentNode","onChange","node","listenAtPath","undefined","startsWith","off","setWaitMS","then","onfulfilled","onrejected","promise","Promise","resolve","reject","resolved","setTimeout","Error","toJSON","id","Entry","parent","Edge","super","has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","apply","j","removeAllListeners","prefixed","module","Node","children","Map","child","Graph","Date","now","entries","listeningPaths","Set","getEntries","getValueAtNode","setPathInternal","merge","json","isListening","maxState","mergePathInternal","add","listeningPath","jsonState","mergePathEdgeInternal","jsonValue","shouldOverwrite","newNode","createEdgeAt","setEdgePathInternal","k","v","edge","edgePath","edgeJSON","createNodeAt","keys","split","shift","reduce","refNode","parentPath","getParentPathAndKey","index","lastIndexOf","substring","nodes","seen","getNodeAtPathInternal","childPath","refPath","c","childValue","localValue","localState","remoteValue","remoteState","JSON","stringify"],"mappings":"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"}