{"version":3,"file":"index.js","sources":["../node_modules/eventemitter3/index.js","../src/Graph.ts"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { EventEmitter } from \"eventemitter3\";\n\nexport type IKey = string | number | symbol;\nexport type IPrimitive = string | number | boolean | null;\nexport type IValue = IPrimitive | { [key: string]: IValue };\nexport type ISetValue = IPrimitive | GraphRef | { [key: IKey]: ISetValue };\n\nexport const SEPERATOR = \"/\";\n\nclass Entry {\n  graph: Graph;\n  parent: Node | null;\n  key: string;\n  state: number;\n\n  constructor(graph: Graph, parent: Node | null, key: string, state: number) {\n    this.graph = graph;\n    this.parent = parent;\n    this.key = key;\n    this.state = state;\n  }\n\n  getPath(): string {\n    if (this.parent) {\n      return this.parent.getPath() + SEPERATOR + this.key;\n    } else {\n      return this.key;\n    }\n  }\n  getChildPath(key: string): string {\n    return this.getPath() + SEPERATOR + key;\n  }\n}\n\nexport interface IEdgeJSON {\n  value: IPrimitive;\n  state: number;\n}\n\nclass Edge extends Entry {\n  value: IPrimitive | Ref;\n\n  constructor(\n    graph: Graph,\n    parent: Node | null,\n    key: string,\n    value: IPrimitive | Ref,\n    state: number\n  ) {\n    super(graph, parent, key, state);\n    this.value = value;\n  }\n\n  isEmpty(): boolean {\n    return (\n      this.value == null || (this.value instanceof Ref && this.value.isEmpty())\n    );\n  }\n  toJSON(): IEdgeJSON | IRefJSON {\n    return this.value instanceof Ref\n      ? this.value.toJSON()\n      : { value: this.value, state: this.state };\n  }\n  toGraphJSON(json: IGraphJSON = {}): IGraphJSON {\n    return toGraphJSONInternal(this, json);\n  }\n}\n\nexport interface INodeJSON {\n  state: number;\n}\n\nclass Node extends Entry {\n  children: Map<string, Node | Edge> = new Map();\n\n  isEmpty(): boolean {\n    return (\n      this.children.size === 0 ||\n      Array.from(this.children.values()).every((child) => child.isEmpty())\n    );\n  }\n  toJSON(): INodeJSON {\n    return { state: this.state };\n  }\n  toGraphJSON(json: IGraphJSON = {}): IGraphJSON {\n    return toGraphJSONInternal(this, json);\n  }\n}\n\nexport interface IRefJSON {\n  id: string;\n  state: number;\n}\n\nclass Ref {\n  graph: Graph;\n  path: string;\n  state: number;\n\n  constructor(graph: Graph, path: string, state: number) {\n    this.graph = graph;\n    this.path = path;\n    this.state = state;\n  }\n\n  get value() {\n    return this.getValue();\n  }\n  get node() {\n    return this.getNode();\n  }\n\n  getValue() {\n    return this.graph.getPathValue(this.path);\n  }\n  getNode() {\n    return this.graph.getPathNode(this.path);\n  }\n\n  isEmpty(): boolean {\n    const node = this.getNode();\n    return node ? node.isEmpty() : true;\n  }\n  toJSON(): IRefJSON {\n    return { id: this.path, state: this.state };\n  }\n}\n\nexport class GraphRef {\n  private graph: Graph;\n  private parent: GraphRef | null;\n  private key: string;\n\n  static fromPath(graph: Graph, path = \"\") {\n    return path\n      .split(SEPERATOR)\n      .reduce<GraphRef | null>(\n        (parent, part) => new GraphRef(graph, parent, part),\n        null\n      );\n  }\n\n  constructor(graph: Graph, parent: GraphRef | null, key: string) {\n    this.graph = graph;\n    this.parent = parent;\n    this.key = key;\n  }\n\n  set(value: ISetValue) {\n    this.graph.setAtPath(this.getPath(), value);\n    return this;\n  }\n  get(key: string) {\n    return new GraphRef(this.graph, this, key);\n  }\n  getValue() {\n    return this.graph.getPathValue(this.getPath());\n  }\n  getNode() {\n    return this.graph.getPathNode(this.getPath());\n  }\n  on(callback: (value: IValue | undefined) => void) {\n    const onSet = (json: IGraphJSON) => {\n      const node = this.getNode();\n\n      if (node) {\n        if (Object.keys(json).some((key) => key.startsWith(node.getPath()))) {\n          callback(this.graph.getPathValue(this.getPath()));\n        }\n      }\n    };\n    this.graph.on(\"set\", onSet);\n    return () => {\n      this.graph.off(\"set\", onSet);\n    };\n  }\n\n  getPath(): string {\n    if (this.parent) {\n      return this.parent.getPath() + SEPERATOR + this.key;\n    } else {\n      return this.key;\n    }\n  }\n  getChildPath(key: string): string {\n    return this.getPath() + SEPERATOR + key;\n  }\n}\n\nexport interface IGraphJSON {\n  [key: string]: INodeJSON | IEdgeJSON | IRefJSON;\n}\n\nexport interface IGraphEvents {\n  get(this: Graph, path: string): void;\n  set(this: Graph, json: IGraphJSON): void;\n}\n\nexport class Graph extends EventEmitter<IGraphEvents> {\n  protected entries = new Map<string, Edge | Node>();\n  protected state = Date.now();\n  protected invalidStates: Array<\n    [path: string, json: INodeJSON | IEdgeJSON | IRefJSON]\n  > = [];\n  protected invalidStateTimeoutId: unknown | undefined;\n  protected lastMaxInvalidState = Infinity;\n\n  getEntries(): ReadonlyMap<string, Edge | Node> {\n    return this.entries;\n  }\n\n  get(key: string): GraphRef {\n    return new GraphRef(this, null, key);\n  }\n  getPathValue(path: string, emit = true): IValue | undefined {\n    const node = this.getPathNode(path);\n    let value: IValue | undefined;\n\n    if (node) {\n      value = getNodeValue(node);\n      path = node.getPath();\n    }\n    if (value === undefined && emit) {\n      this.emit(\"get\", path);\n    }\n    return value;\n  }\n  getPathNode(path: string) {\n    return getPathNode(this, path);\n  }\n\n  setAtPath(path: string, value: ISetValue) {\n    this.state = Date.now();\n    const node = this.setInternal(path, value, this.state);\n    this.emit(\"set\", toGraphJSON(node));\n    return this;\n  }\n\n  merge(json: IGraphJSON, emit = true) {\n    const maxState = Date.now(),\n      prevInvalidStates = this.invalidStates.length,\n      merged: IGraphJSON = {};\n\n    let maxInvalidState = maxState;\n    for (const [key, value] of Object.entries(json)) {\n      if (value.state <= maxState) {\n        this.mergeInternal(key, value);\n        merged[key] = value;\n      } else {\n        const index = this.invalidStates.findIndex(\n          ([_, j]) => value.state < j.state\n        );\n        maxInvalidState = Math.max(maxInvalidState, value.state);\n\n        if (index === -1) {\n          this.invalidStates.push([key, value]);\n        } else {\n          this.invalidStates.splice(index, 0, [key, value]);\n        }\n      }\n    }\n    if (prevInvalidStates !== this.invalidStates.length) {\n      this.handleInvalidStates(maxState, maxInvalidState);\n    }\n    if (emit) {\n      this.emit(\"set\", merged);\n    }\n    return this;\n  }\n\n  toJSON() {\n    return Array.from(this.entries.values()).reduce(\n      (json, node) => node.toGraphJSON(json),\n      {} as IGraphJSON\n    );\n  }\n\n  private mergeInternal(path: string, json: INodeJSON | IEdgeJSON | IRefJSON) {\n    const jsonState = json.state,\n      node = this.getPathNode(path);\n\n    if (!(\"value\" in json) && !(\"id\" in json)) {\n      if (!node || node instanceof Edge) {\n        if (node) {\n          this.deleteInternal(path);\n        }\n        this.getOrCreateNode(path, jsonState);\n      }\n    } else {\n      const jsonValue =\n        \"value\" in json ? json.value : new Ref(this, json.id, jsonState);\n\n      if (node instanceof Edge) {\n        if (shouldOverwrite(node.value, node.state, jsonValue, jsonState)) {\n          node.value = jsonValue;\n          node.state = jsonState;\n        }\n      } else if (node instanceof Node) {\n        if (\n          shouldOverwrite(\n            new Ref(this, node.getPath(), jsonState),\n            node.state,\n            jsonValue,\n            jsonState\n          )\n        ) {\n          this.deleteInternal(path);\n          this.getOrCreateEdge(path, jsonState).value = jsonValue;\n        }\n      } else {\n        this.getOrCreateEdge(path, jsonState).value = jsonValue;\n      }\n    }\n  }\n\n  private handleInvalidStates(maxState: number, maxInvalidState: number) {\n    if (maxInvalidState < this.lastMaxInvalidState) {\n      this.lastMaxInvalidState = maxInvalidState;\n      clearTimeout(this.invalidStateTimeoutId as number);\n      this.invalidStateTimeoutId = undefined;\n    }\n    if (this.invalidStateTimeoutId) {\n      return;\n    }\n    this.invalidStateTimeoutId = setTimeout(() => {\n      const newMaxState = Date.now(),\n        invalidStates = this.invalidStates,\n        graphJSON: IGraphJSON = {};\n\n      this.invalidStateTimeoutId = undefined;\n\n      let index = -1;\n      for (let i = invalidStates.length - 1; i >= 0; i--) {\n        const [path, json] = invalidStates[i];\n\n        if (json.state <= newMaxState) {\n          this.mergeInternal(path, json);\n          graphJSON[path] = json;\n          index = i;\n        }\n      }\n\n      if (index !== -1) {\n        invalidStates.splice(index, invalidStates.length - index);\n        this.emit(\"set\", graphJSON);\n      }\n      if (invalidStates.length) {\n        this.handleInvalidStates(newMaxState, invalidStates[0][1].state);\n      }\n    }, maxInvalidState - maxState);\n  }\n\n  private deleteInternal(path: string) {\n    const node = this.getPathNode(path);\n\n    if (node instanceof Node) {\n      for (const key of node.children.keys()) {\n        this.deleteInternal(node.getChildPath(key));\n      }\n    }\n    if (node) {\n      this.entries.delete(node.getPath());\n    }\n  }\n\n  private setInternal(path: string, value: ISetValue, state: number) {\n    let node = this.getPathNode(path);\n\n    if (value != null && typeof value === \"object\") {\n      if (value instanceof GraphRef) {\n        if (node instanceof Node || !node) {\n          if (node) {\n            this.deleteInternal(node.getPath());\n          }\n          node = this.getOrCreateEdge(path, state);\n        }\n        node.value = new Ref(this, value.getPath(), state);\n        node.state = state;\n        return node;\n      } else {\n        if (node instanceof Edge || !node) {\n          if (node) {\n            this.deleteInternal(node.getPath());\n          }\n          node = this.getOrCreateNode(path, state);\n        }\n\n        for (const [k, v] of Object.entries(value)) {\n          node.children.set(\n            k,\n            this.setInternal(node.getChildPath(k), v, state)\n          );\n        }\n\n        return node;\n      }\n    } else {\n      if (node instanceof Node || !node) {\n        if (node) {\n          this.deleteInternal(node.getPath());\n        }\n        node = this.getOrCreateEdge(path, state);\n      }\n      node.value = value;\n      node.state = state;\n      return node;\n    }\n  }\n\n  private getOrCreateNode(path: string, state: number): Node {\n    const keys = path.split(SEPERATOR),\n      key = keys.shift() as string;\n\n    let parent = this.entries.get(key);\n\n    if (!(parent instanceof Node)) {\n      parent = new Node(this, null, key, this.state);\n      this.entries.set(key, parent);\n    }\n\n    return keys.reduce<Node>((parent, key) => {\n      const node = parent.children.get(key);\n\n      if (node instanceof Node) {\n        return node;\n      } else if (node instanceof Edge) {\n        if (node.value instanceof Ref) {\n          const refNode = node.value.getNode();\n\n          if (refNode instanceof Node) {\n            return refNode;\n          }\n        }\n      }\n      const newNode = new Node(this, parent, key, state);\n      parent.children.set(key, newNode);\n      this.entries.set(newNode.getPath(), newNode);\n      return newNode;\n    }, parent);\n  }\n\n  private getOrCreateEdge(path: string, state: number): Edge {\n    const [parentPath, key] = getParentPathAndKey(path),\n      parent = parentPath ? this.getOrCreateNode(parentPath, state) : null;\n\n    let node = parent?.children.get(key);\n\n    if (node instanceof Edge) {\n      return node;\n    } else {\n      node = new Edge(this, parent, key, null, state);\n      parent?.children.set(key, node);\n      this.entries.set(path, node);\n      return node;\n    }\n  }\n}\n\nexport function getParentPath(path: string) {\n  const index = path.lastIndexOf(\"/\");\n\n  if (index === -1) {\n    return undefined;\n  } else {\n    return path.substring(index + 1);\n  }\n}\n\nexport function getParentPathAndKey(\n  path: string\n): [parentPath: string | undefined, key: string] {\n  const index = path.lastIndexOf(\"/\");\n\n  if (index === -1) {\n    return [undefined, path];\n  } else {\n    return [path.substring(0, index), path.substring(index + 1)];\n  }\n}\n\nexport function getNodeValue(\n  node: Node | Edge | undefined\n): IValue | undefined {\n  return getNodeValueInternal(node, new Map());\n}\n\nfunction getNodeValueInternal(\n  node: Node | Edge | undefined,\n  values: Map<Node | Edge | undefined, IValue | undefined>\n): IValue | undefined {\n  if (!node) {\n    return undefined;\n  }\n  const seen = values.get(node);\n  if (seen) {\n    return seen;\n  }\n  if (node instanceof Edge) {\n    if (node.value instanceof Ref) {\n      const value = getNodeValueInternal(node.value.getNode(), values) || null;\n      values.set(node, value);\n      return value;\n    } else {\n      const value = node.value;\n      values.set(node, value);\n      return value;\n    }\n  } else if (node instanceof Node) {\n    const children: { [key: string]: IValue } = {};\n    values.set(node, children);\n    for (const key of node.children.keys()) {\n      children[key] =\n        getNodeValueInternal(node.children.get(key), values) || null;\n    }\n    return children;\n  }\n  values.set(node, undefined);\n  return undefined;\n}\n\nexport function toGraphJSON(node: Node | Edge) {\n  return toGraphJSONInternal(node, {});\n}\n\nfunction toGraphJSONInternal(node: Node | Edge, json: IGraphJSON) {\n  json[node.getPath()] = node.toJSON();\n\n  if (node instanceof Node) {\n    for (const child of node.children.values()) {\n      toGraphJSONInternal(child, json);\n    }\n  }\n\n  return json;\n}\n\nfunction getPathNode(graph: Graph, path: string): Node | Edge | undefined {\n  const keys = path.split(SEPERATOR),\n    key = keys.shift() as string,\n    node = graph.getEntries().get(key);\n\n  if (node) {\n    return followNodePath(keys, node);\n  } else {\n    return undefined;\n  }\n}\n\nfunction followNodePath(\n  keys: string[],\n  node: Node | Edge\n): Node | Edge | undefined {\n  if (keys.length === 0) {\n    return node;\n  } else if (node instanceof Node) {\n    const key = keys.shift() as string,\n      child = node.children.get(key);\n\n    if (child) {\n      return followNodePath(keys, child);\n    }\n  } else if (node.value instanceof Ref) {\n    const refNode = node.value.getNode();\n\n    if (refNode) {\n      return followNodePath(keys, refNode);\n    }\n  }\n  return undefined;\n}\n\nfunction shouldOverwrite(\n  localValue: IPrimitive | Ref,\n  localState: number,\n  remoteValue: IPrimitive | Ref,\n  remoteState: number\n) {\n  return (\n    remoteState >= localState &&\n    (localState === remoteState\n      ? JSON.stringify(remoteValue) > JSON.stringify(localValue)\n      : true)\n  );\n}\n"],"names":["has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","SEPERATOR","Entry","graph","parent","key","state","constructor","getPath","getChildPath","Edge","value","super","isEmpty","Ref","toJSON","toGraphJSON","json","toGraphJSONInternal","Node","children","Map","size","from","values","every","child","path","getValue","node","getNode","getPathValue","getPathNode","id","GraphRef","static","split","reduce","part","set","setAtPath","get","callback","onSet","keys","some","startsWith","Graph","entries","Date","now","invalidStates","invalidStateTimeoutId","lastMaxInvalidState","Infinity","getEntries","getNodeValue","shift","followNodePath","setInternal","merge","maxState","prevInvalidStates","merged","maxInvalidState","mergeInternal","index","findIndex","_","Math","max","splice","handleInvalidStates","jsonState","jsonValue","shouldOverwrite","deleteInternal","getOrCreateEdge","getOrCreateNode","clearTimeout","setTimeout","newMaxState","graphJSON","delete","k","v","refNode","newNode","parentPath","getParentPathAndKey","getParentPath","lastIndexOf","substring","getNodeValueInternal","seen","localValue","localState","remoteValue","remoteState","JSON","stringify"],"mappings":"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"}