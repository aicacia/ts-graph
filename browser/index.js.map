{"version":3,"file":"index.js","sources":["../node_modules/eventemitter3/index.js","../src/Graph.ts"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { EventEmitter } from \"eventemitter3\";\n\nexport type IKeyOf<T> = Exclude<keyof T, symbol | number>;\n\nexport type IPrimitive = string | number | boolean | null;\n\nexport type IGraph = { [S in string]: IGraphNode } & {\n  [S in number]: IGraphNode;\n};\nexport type IGraphNode = IPrimitive | Ref | IGraph;\n\nexport type IReturn<T extends IGraphNode> = T extends IGraph\n  ? { [K in IKeyOf<T>]: IReturn<T[K]> }\n  : T extends Ref<infer V>\n  ? V\n  : T;\n\nexport const SEPERATOR = \"/\";\n\nexport interface IEntryJSON {\n  state: number;\n}\n\nexport class Entry {\n  graph: Graph;\n  parent: Entry | null;\n  key: string;\n  state: number;\n\n  constructor(graph: Graph, parent: Entry | null, key: string, state: number) {\n    this.graph = graph;\n    this.parent = parent;\n    this.key = key;\n    this.state = state;\n  }\n\n  getPath(): string {\n    return this.parent\n      ? this.parent.getPath() + SEPERATOR + this.key\n      : this.key;\n  }\n\n  toJSON(): IEntryJSON {\n    return {\n      state: this.state,\n    };\n  }\n}\n\nexport interface INodeJSON extends IEntryJSON {\n  children: {\n    [key: string | symbol | number]: IEdgeJSON | IRefJSON | INodeJSON;\n  };\n}\n\nexport class Node extends Entry {\n  children: Map<string, Edge | Node> = new Map();\n\n  getValue() {\n    return getValueAtPath([], this, new Map());\n  }\n\n  toNodesJSON() {\n    return nodeMapToJSON(this.children, {}, this.getPath(), false);\n  }\n\n  toJSON(): INodeJSON {\n    const children: INodeJSON[\"children\"] = {};\n    for (const [key, child] of this.children) {\n      if (child instanceof Node) {\n        children[key] = { state: child.state, id: child.getPath() };\n      } else {\n        children[key] = child.toJSON();\n      }\n    }\n    return {\n      state: this.state,\n      children,\n    };\n  }\n}\n\nexport interface IEdgeJSON extends IEntryJSON {\n  value: IPrimitive;\n}\n\nexport class Edge extends Entry {\n  value: IPrimitive | Ref;\n\n  constructor(\n    graph: Graph,\n    parent: Entry | null,\n    key: string,\n    state: number,\n    value: IPrimitive\n  ) {\n    super(graph, parent, key, state);\n    this.state = state;\n    this.value = value;\n  }\n\n  getValue() {\n    return getValueAtPath([], this, new Map());\n  }\n\n  toJSON(): IEdgeJSON | IRefJSON {\n    return this.value instanceof Ref\n      ? this.value.toJSON()\n      : { state: this.state, value: this.value };\n  }\n}\n\nexport interface IRefJSON extends IEntryJSON {\n  id: string;\n}\n\nexport class Ref<T extends IGraphNode = IGraphNode>\n  implements PromiseLike<IReturn<T> | undefined>\n{\n  protected graph: Graph;\n  protected path: string;\n  protected state: number;\n\n  constructor(graph: Graph, path: string, state: number) {\n    this.graph = graph;\n    this.path = path;\n    this.state = state;\n  }\n\n  get<SK extends IKeyOf<T> = IKeyOf<T>>(\n    key: SK\n  ): Ref<\n    T[SK] extends IGraph ? T[SK] : T[SK] extends Ref<infer V> ? V : IPrimitive\n  > {\n    return new Ref(this.graph, this.path + SEPERATOR + key, this.state);\n  }\n  set(value: T | Ref<T>) {\n    this.graph.set(this.path, value);\n    return this;\n  }\n  getValue(): IReturn<T> | undefined {\n    return this.graph.getValueAtPath(this.path) as IReturn<T>;\n  }\n  getPath() {\n    return this.path;\n  }\n  getNode() {\n    return this.graph.getNodeAtPath(this.path);\n  }\n  getState() {\n    return this.state;\n  }\n\n  on(callback: (value: IReturn<T> | undefined) => void) {\n    const node = this.getNode();\n    const onChange = (path: string) => {\n      if (path.startsWith(node?.getPath() || this.path)) {\n        callback(this.getValue());\n      }\n    };\n    this.graph.listenTo(node ? node.getPath() : this.path);\n    this.graph.on(\"change\", onChange);\n    const value = getValueAtPath([], node, new Map()) as IReturn<T> | undefined;\n    if (value !== undefined) {\n      callback(value);\n    }\n    return () => {\n      this.graph.off(\"change\", onChange);\n    };\n  }\n\n  then<R = IReturn<T> | undefined, E = never>(\n    onfulfilled?:\n      | ((value: IReturn<T> | undefined) => R | PromiseLike<R>)\n      | undefined\n      | null,\n    onrejected?: ((reason: any) => E | PromiseLike<E>) | undefined | null\n  ): PromiseLike<R | E> {\n    const node = this.getNode(),\n      value = getValueAtPath([], node, new Map()) as IReturn<T> | undefined;\n    let promise: PromiseLike<IReturn<T> | undefined>;\n\n    if (value !== undefined) {\n      if (value instanceof Ref) {\n        promise = value.then();\n      } else {\n        promise = Promise.resolve<IReturn<T>>(value);\n      }\n    } else {\n      this.graph.listenTo(node ? node.getPath() : this.path);\n      promise = new Promise((resolve) => {\n        const onChange = (path: string) => {\n          if (path.startsWith(this.path)) {\n            resolve(this.getValue());\n          }\n        };\n        this.graph.once(\"change\", onChange);\n      });\n    }\n    return promise.then(onfulfilled, onrejected);\n  }\n\n  toJSON(): IRefJSON {\n    return {\n      id: this.path,\n      state: this.state,\n    };\n  }\n}\n\nexport interface IGraphEvents<T extends IGraph> {\n  get(this: Graph<T>, path: string): void;\n  set(this: Graph<T>, path: string, value: IRefJSON | IEdgeJSON): void;\n  change(\n    this: Graph<T>,\n    path: string,\n    value: IRefJSON | IEdgeJSON | INodeJSON\n  ): void;\n}\n\nexport class Graph<T extends IGraph = IGraph> extends EventEmitter<\n  IGraphEvents<T>\n> {\n  protected listening: Set<string> = new Set();\n  protected state = Date.now();\n  protected entries: Map<string, Node | Edge> = new Map();\n\n  getEntries(): ReadonlyMap<string, Node | Edge> {\n    return this.entries;\n  }\n\n  get<K extends IKeyOf<T> = IKeyOf<T>>(key: K): Ref<T[K]> {\n    return new Ref(this, key, this.state);\n  }\n\n  getValueAtPath(path: string) {\n    const keys = path.split(SEPERATOR),\n      node = this.entries.get(keys.shift() as string);\n\n    if (node) {\n      return getValueAtPath(keys, node, new Map());\n    } else {\n      this.listenTo(path);\n      return undefined;\n    }\n  }\n\n  getNodeAtPath(path: string) {\n    const keys = path.split(SEPERATOR),\n      node = this.entries.get(keys.shift() as string);\n\n    return getNodeAtPath(keys, node);\n  }\n\n  set(path: string, value: IGraphNode) {\n    this.state = Date.now();\n    this.setPathInternal(path, value, this.state);\n    return this;\n  }\n\n  merge(path: string, json: IRefJSON | IEdgeJSON | INodeJSON) {\n    if (this.isListeningTo(path)) {\n      this.mergePathInternal(path, json);\n    }\n    return this;\n  }\n\n  listenTo(path: string) {\n    this.listening.add(path);\n    this.emit(\"get\", path);\n    return this;\n  }\n\n  isListeningTo(path: string) {\n    for (const listeningPath of this.listening) {\n      if (path.startsWith(listeningPath)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  toJSON() {\n    return nodeMapToJSON(this.entries, {}, undefined, true);\n  }\n\n  private mergePathInternal(\n    path: string,\n    json: IRefJSON | IEdgeJSON | INodeJSON\n  ) {\n    const jsonState = json.state;\n    let node = this.getNodeAtPath(path);\n\n    if (\"children\" in json) {\n      if (node instanceof Edge) {\n        if (\n          (node.value instanceof Ref &&\n            node.value.getPath() === path &&\n            node.value.getState() >= jsonState) ||\n          shouldOverwrite(\n            node.value,\n            node.state,\n            new Ref(this, path, jsonState),\n            jsonState\n          )\n        ) {\n          node = this.createNodeAt(path, jsonState);\n        }\n      } else if (!node) {\n        node = this.createNodeAt(path, jsonState);\n      }\n\n      if (node instanceof Node) {\n        for (const [key, child] of Object.entries(json.children)) {\n          this.mergePathInternal(node.getPath() + SEPERATOR + key, child);\n        }\n        this.emit(\"change\", node.getPath(), node.toJSON());\n      }\n    } else {\n      const jsonValue =\n        \"value\" in json ? json.value : new Ref(this, json.id, jsonState);\n\n      if (node instanceof Edge) {\n        if (shouldOverwrite(node.value, node.state, jsonValue, jsonState)) {\n          node.value = jsonValue;\n          node.state = jsonState;\n          this.emit(\"change\", node.getPath(), node.toJSON());\n        }\n      } else if (node instanceof Node) {\n        if (\n          shouldOverwrite(\n            new Ref(this, node.getPath(), jsonState),\n            node.state,\n            jsonValue,\n            jsonState\n          )\n        ) {\n          const newNode = this.createEdgeAt(path, jsonState);\n          newNode.value = jsonValue;\n          this.emit(\"change\", newNode.getPath(), newNode.toJSON());\n        }\n      } else {\n        const newNode = this.createEdgeAt(path, jsonState);\n        newNode.value = jsonValue;\n        this.emit(\"change\", newNode.getPath(), newNode.toJSON());\n      }\n    }\n    return this;\n  }\n\n  private setPathInternal(path: string, value: IGraphNode, state: number) {\n    if (value instanceof Ref) {\n      this.setEdgePathInternal(path, value, state);\n    } else if (value != null && typeof value === \"object\") {\n      for (const [k, v] of Object.entries(value)) {\n        this.setPathInternal(path + SEPERATOR + k, v, state);\n      }\n    } else {\n      this.setEdgePathInternal(path, value, state);\n    }\n  }\n\n  private setEdgePathInternal(\n    path: string,\n    value: IPrimitive | Ref,\n    state: number\n  ) {\n    const edge = this.createEdgeAt(path, state);\n    edge.value = value;\n    const edgePath = edge.getPath(),\n      edgeJSON = edge.toJSON();\n    this.emit(\"change\", edgePath, edgeJSON);\n    this.emit(\"set\", edgePath, edgeJSON);\n    return edge;\n  }\n\n  private createNodeAt(path: string, state: number): Node {\n    const keys = path.split(SEPERATOR),\n      key = keys.shift() as string;\n\n    let parent = this.entries.get(key);\n\n    if (!(parent instanceof Node)) {\n      parent = new Node(this, null, key, state);\n      this.entries.set(key, parent);\n    }\n\n    return keys.reduce<Node>((parent, key) => {\n      const node = parent.children.get(key);\n\n      if (node instanceof Node) {\n        return node;\n      } else if (node instanceof Edge) {\n        if (node.value instanceof Ref) {\n          const refNode = node.value.getNode();\n\n          if (refNode instanceof Node) {\n            return refNode;\n          }\n        }\n      }\n      const newNode = new Node(this, parent, key, state);\n      parent.children.set(key, newNode);\n      return newNode;\n    }, parent);\n  }\n\n  private createEdgeAt(path: string, state: number): Edge {\n    const [parentPath, key] = getParentPathAndKey(path),\n      parent = parentPath ? this.createNodeAt(parentPath, state) : null;\n\n    let node = parent?.children.get(key);\n\n    if (node instanceof Edge) {\n      node.state = state;\n      return node;\n    } else {\n      node = new Edge(this, parent, key, state, null);\n      if (parent) {\n        parent?.children.set(key, node);\n      } else {\n        this.entries.set(key, node);\n      }\n      return node;\n    }\n  }\n}\nexport function getParentPath(path: string) {\n  const index = path.lastIndexOf(\"/\");\n\n  if (index === -1) {\n    return undefined;\n  } else {\n    return path.substring(index + 1);\n  }\n}\n\nexport function getParentPathAndKey(\n  path: string\n): [parentPath: string | undefined, key: string] {\n  const index = path.lastIndexOf(\"/\");\n\n  if (index === -1) {\n    return [undefined, path];\n  } else {\n    return [path.substring(0, index), path.substring(index + 1)];\n  }\n}\n\nfunction getValueAtPath(\n  keys: string[],\n  node: Node | Edge | undefined,\n  values: Map<Node | Edge, IGraphNode | undefined>\n): IGraphNode | undefined {\n  if (!node) {\n    return undefined;\n  }\n  const seen = values.get(node);\n  if (seen) {\n    return seen;\n  }\n  if (node instanceof Node) {\n    const key = keys.shift() as string;\n\n    if (key) {\n      const child = node.children.get(key);\n\n      if (child) {\n        return getValueAtPath(keys, child, values);\n      } else {\n        node.graph.listenTo(node.getPath() + SEPERATOR + key);\n        values.set(node, undefined);\n        return undefined;\n      }\n    } else {\n      const children: {\n        [key: string]: IGraphNode;\n      } = {};\n      values.set(node, children);\n      for (const [k, c] of node.children) {\n        const childPath = node.getPath() + SEPERATOR + k;\n        if (\n          c instanceof Edge &&\n          c.value instanceof Ref &&\n          c.getPath() === childPath\n        ) {\n          children[k] = new Ref(node.graph, childPath, c.state);\n        } else {\n          const value = getValueAtPath(keys, c, values);\n\n          if (value !== undefined) {\n            children[k] = value;\n          } else {\n            children[k] = new Ref(node.graph, childPath, c.state);\n          }\n        }\n      }\n      return children;\n    }\n  } else if (node.value instanceof Ref) {\n    if (node.getPath() === node.value.getPath()) {\n      node.graph.listenTo(node.value.getPath());\n      values.set(node, undefined);\n      return undefined;\n    }\n    const refNode = node.value.getNode();\n\n    if (refNode) {\n      return getValueAtPath(keys, refNode, values);\n    } else {\n      node.graph.listenTo(node.value.getPath());\n      values.set(node, undefined);\n      return undefined;\n    }\n  }\n  values.set(node, node.value);\n  return node.value;\n}\n\nfunction getNodeAtPath(\n  keys: string[],\n  node: Node | Edge | undefined\n): Node | Edge | undefined {\n  if (!node) {\n    return undefined;\n  } else if (node instanceof Node) {\n    const key = keys.shift() as string;\n\n    if (key) {\n      const child = node.children.get(key);\n\n      if (child) {\n        return getNodeAtPath(keys, child);\n      } else {\n        return undefined;\n      }\n    } else {\n      return node;\n    }\n  } else if (node.value instanceof Ref) {\n    if (node.getPath() === node.value.getPath()) {\n      return node;\n    }\n    const refNode = node.value.getNode();\n\n    if (refNode) {\n      return getNodeAtPath(keys, refNode);\n    } else {\n      return undefined;\n    }\n  }\n  return node;\n}\n\nfunction shouldOverwrite(\n  localValue: IPrimitive | Ref,\n  localState: number,\n  remoteValue: IPrimitive | Ref,\n  remoteState: number\n) {\n  return (\n    remoteState >= localState &&\n    (localState === remoteState\n      ? JSON.stringify(remoteValue) > JSON.stringify(localValue)\n      : true)\n  );\n}\n\nfunction nodeMapToJSON(\n  entries: Map<string, Edge | Node>,\n  json: { [key: string | symbol | number]: IEdgeJSON | IRefJSON | INodeJSON },\n  path?: string,\n  recur = false\n) {\n  const prefix = path ? path + SEPERATOR : \"\";\n  entries.forEach((child, key) => {\n    if (child instanceof Node) {\n      if (recur) {\n        nodeMapToJSON(child.children, json, prefix + key, recur);\n      } else {\n        json[prefix + key] = child.toJSON();\n      }\n    } else {\n      json[prefix + key] = child.toJSON();\n    }\n  });\n  return json;\n}\n"],"names":["has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","Entry","graph","parent","key","state","constructor","getPath","toJSON","Node","children","Map","getValue","getValueAtPath","toNodesJSON","nodeMapToJSON","child","id","Edge","value","super","Ref","path","get","set","getNode","getNodeAtPath","getState","callback","node","onChange","startsWith","listenTo","then","onfulfilled","onrejected","promise","Promise","resolve","Graph","listening","Set","Date","now","entries","getEntries","keys","split","shift","setPathInternal","merge","json","isListeningTo","mergePathInternal","add","listeningPath","jsonState","shouldOverwrite","createNodeAt","jsonValue","newNode","createEdgeAt","setEdgePathInternal","k","v","edge","edgePath","edgeJSON","reduce","refNode","parentPath","getParentPathAndKey","getParentPath","index","lastIndexOf","substring","values","seen","c","childPath","localValue","localState","remoteValue","remoteState","JSON","stringify","recur","forEach"],"mappings":"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"}