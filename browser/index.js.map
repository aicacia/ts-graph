{"version":3,"file":"index.js","sources":["../node_modules/eventemitter3/index.js","../src/Graph.ts"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { EventEmitter } from \"eventemitter3\";\n\nexport type IKeyOf<T> = Exclude<keyof T, symbol | number>;\nexport type IValueOf<T> = Extract<T, IPrimitive>;\n\nexport type IPrimitive = string | number | boolean | null;\n\nexport type IGraph = { [S in string]: IGraphValue } & {\n  [S in number]: IGraphValue;\n};\nexport type IGraphValue = IPrimitive | Ref | IGraph;\n\nexport type IRefValueChild<T extends IGraphValue> = T extends IGraph\n  ? Ref<T>\n  : T extends Ref<infer V>\n  ? Ref<V>\n  : T;\n\nexport type IRefValue<T extends IGraphValue> = T extends IGraph\n  ? { [K in IKeyOf<T>]: IRefValueChild<T[K]> }\n  : T extends Ref<infer V>\n  ? V\n  : T;\n\nexport const SEPERATOR = \"/\";\n\nexport interface IEntryJSON {\n  state: number;\n}\n\nexport class Entry {\n  graph: Graph;\n  parent: Entry | null;\n  key: string;\n  state: number;\n\n  constructor(graph: Graph, parent: Entry | null, key: string, state: number) {\n    this.graph = graph;\n    this.parent = parent;\n    this.key = key;\n    this.state = state;\n  }\n\n  getValue() {\n    return this.graph.getValueAtPath(this.getPath());\n  }\n  getPath(): string {\n    return this.parent\n      ? this.parent.getPath() + SEPERATOR + this.key\n      : this.key;\n  }\n\n  toJSON(): IEntryJSON {\n    return {\n      state: this.state,\n    };\n  }\n}\n\nexport interface INodeJSON extends IEntryJSON {\n  children: {\n    [key: string | symbol | number]: IEdgeJSON | IRefJSON | INodeJSON;\n  };\n}\n\nexport class Node extends Entry {\n  children: Map<string, Edge | Node> = new Map();\n\n  toJSON(): INodeJSON {\n    const children: INodeJSON[\"children\"] = {};\n    for (const [key, child] of this.children) {\n      if (child instanceof Node) {\n        children[key] = { state: child.state, id: child.getPath() };\n      } else {\n        children[key] = child.toJSON();\n      }\n    }\n    return {\n      ...super.toJSON(),\n      children,\n    };\n  }\n}\n\nexport interface IEdgeJSON extends IEntryJSON {\n  value: IPrimitive;\n}\n\nexport class Edge extends Entry {\n  value: IPrimitive | Ref;\n\n  constructor(\n    graph: Graph,\n    parent: Entry | null,\n    key: string,\n    state: number,\n    value: IPrimitive\n  ) {\n    super(graph, parent, key, state);\n    this.value = value;\n  }\n\n  getPath() {\n    return this.value instanceof Ref ? this.value.getPath() : super.getPath();\n  }\n\n  toJSON(): IEdgeJSON | IRefJSON {\n    return this.value instanceof Ref\n      ? this.value.toJSON()\n      : {\n          ...super.toJSON(),\n          value: this.value,\n        };\n  }\n}\n\nexport interface IRefJSON extends IEntryJSON {\n  id: string;\n}\n\nexport class Ref<T extends IGraphValue = IGraphValue>\n  implements PromiseLike<IRefValue<T> | undefined>\n{\n  protected graph: Graph;\n  protected path: string;\n  protected state: number;\n  protected waitMS: number;\n\n  constructor(graph: Graph, path: string, state: number) {\n    this.graph = graph;\n    this.path = path;\n    this.state = state;\n    this.waitMS = graph.getWaitMS();\n  }\n\n  get<SK extends IKeyOf<T> = IKeyOf<T>>(\n    key: SK\n  ): Ref<\n    T[SK] extends IGraph\n      ? T[SK]\n      : T[SK] extends Ref<infer V>\n      ? V\n      : IValueOf<T[SK]>\n  > {\n    return new Ref(this.graph, this.path + SEPERATOR + key, this.state);\n  }\n  set(value: T | Ref<T>) {\n    this.graph.set(this.path, value);\n    return this;\n  }\n  getValue(): IRefValue<T> | undefined {\n    return this.graph.getValueAtPath<T>(this.path);\n  }\n  getPath() {\n    return this.path;\n  }\n  getNode() {\n    return this.graph.getNodeAtPath(this.path);\n  }\n  getState() {\n    return this.state;\n  }\n\n  on(callback: (value: IRefValue<T> | undefined) => void) {\n    let currentNode = this.getNode();\n\n    const onChange = (path: string) => {\n      const node = this.getNode();\n\n      if (node) {\n        const value = node.getValue() as IRefValue<T>;\n\n        if (currentNode !== node) {\n          this.graph.listenAtPath(node.getPath(), value === undefined);\n          currentNode = node;\n        }\n\n        if (path.startsWith(node.getPath())) {\n          callback(value);\n        }\n      } else {\n        currentNode = node;\n      }\n    };\n    this.graph.on(\"change\", onChange);\n\n    const value = currentNode?.getValue() as IRefValue<T>;\n    this.graph.listenAtPath(\n      currentNode?.getPath() || this.path,\n      value === undefined\n    );\n\n    if (value !== undefined) {\n      callback(value);\n    }\n\n    return () => {\n      this.graph.off(\"change\", onChange);\n    };\n  }\n\n  getWaitMS() {\n    return this.waitMS;\n  }\n  setWaitMS(waitMS: number) {\n    this.waitMS = waitMS;\n    return this;\n  }\n\n  then<R = IRefValue<T> | undefined, E = never>(\n    onfulfilled?:\n      | ((value: IRefValue<T> | undefined) => R | PromiseLike<R>)\n      | undefined\n      | null,\n    onrejected?: ((reason: any) => E | PromiseLike<E>) | undefined | null\n  ): PromiseLike<R | E> {\n    const value = this.getValue();\n    let promise: Promise<IRefValue<T> | undefined>;\n\n    if (value !== undefined) {\n      promise = Promise.resolve<IRefValue<T> | undefined>(value);\n    } else {\n      promise = new Promise((resolve, reject) => {\n        let resolved = false;\n        const off = this.on((value) => {\n          resolved = true;\n          off();\n          resolve(value);\n        });\n        setTimeout(() => {\n          if (!resolved) {\n            reject(\n              new Error(`Request took longer than ${this.waitMS}ms to resolve`)\n            );\n            off();\n          }\n        }, this.waitMS);\n      });\n    }\n\n    return promise.then(onfulfilled, onrejected);\n  }\n\n  toJSON(): IRefJSON {\n    return {\n      id: this.path,\n      state: this.state,\n    };\n  }\n}\n\nexport interface IGraphEvents<T extends IGraph> {\n  get(this: Graph<T>, path: string): void;\n  set(this: Graph<T>, path: string, value: IRefJSON | IEdgeJSON): void;\n  change(\n    this: Graph<T>,\n    path: string,\n    value: IRefJSON | IEdgeJSON | INodeJSON\n  ): void;\n}\n\nexport class Graph<T extends IGraph = IGraph> extends EventEmitter<\n  IGraphEvents<T>\n> {\n  protected state = Date.now();\n  protected entries: Map<string, Node | Edge> = new Map();\n  protected listeningPaths: Set<string> = new Set();\n  protected waitMS = 5000;\n\n  setWaitMS(waitMS: number) {\n    this.waitMS = waitMS;\n    return this;\n  }\n  getWaitMS() {\n    return this.waitMS;\n  }\n\n  getEntries(): ReadonlyMap<string, Node | Edge> {\n    return this.entries;\n  }\n\n  get<K extends IKeyOf<T> = IKeyOf<T>>(key: K): Ref<T[K]> {\n    return new Ref(this, key, this.state);\n  }\n\n  getValueAtPath<V extends IGraphValue = IGraphValue>(\n    path: string\n  ): IRefValue<V> | undefined {\n    const node = this.getNodeAtPath(path);\n    let value: IRefValue<V> | undefined;\n\n    if (node) {\n      value = getValueAtNode<V>(this, node);\n      if (value === undefined) {\n        this.listenAtPath(path);\n      }\n    } else {\n      this.listenAtPath(path);\n    }\n\n    return value;\n  }\n\n  getNodeAtPath(path: string): Node | Edge | undefined {\n    return getNodeAtPath(this, path, new Map());\n  }\n\n  set(path: string, value: IGraphValue) {\n    this.state = Date.now();\n    this.setPathInternal(path, value, this.state);\n    return this;\n  }\n\n  merge(path: string, json: IRefJSON | IEdgeJSON | INodeJSON) {\n    if (this.isListening(path)) {\n      this.mergePathInternal(path, json);\n    }\n    return this;\n  }\n\n  listenAtPath(path: string, emit = true) {\n    if (emit) {\n      this.emit(\"get\", path);\n    }\n    this.listeningPaths.add(path);\n    return this;\n  }\n\n  isListening(path: string) {\n    for (const listeningPath of this.listeningPaths) {\n      if (path.startsWith(listeningPath)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private mergePathInternal(\n    path: string,\n    json: IRefJSON | IEdgeJSON | INodeJSON\n  ) {\n    const jsonState = json.state;\n    let node = this.getNodeAtPath(path);\n\n    if (\"children\" in json) {\n      if (node instanceof Edge) {\n        if (shouldOverwrite(node.value, node.state, node.value, jsonState)) {\n          node = this.createNodeAt(path, jsonState);\n          this.emit(\"change\", node.getPath(), node.toJSON());\n        }\n      } else if (!node) {\n        node = this.createNodeAt(path, jsonState);\n        this.emit(\"change\", node.getPath(), node.toJSON());\n      }\n\n      if (node instanceof Node) {\n        for (const [key, child] of Object.entries(json.children)) {\n          this.mergePathInternal(node.getPath() + SEPERATOR + key, child);\n        }\n      }\n    } else {\n      const jsonValue =\n        \"value\" in json ? json.value : new Ref(this, json.id, jsonState);\n\n      if (node instanceof Edge) {\n        if (shouldOverwrite(node.value, node.state, jsonValue, jsonState)) {\n          node.value = jsonValue;\n          node.state = jsonState;\n          this.emit(\"change\", node.getPath(), node.toJSON());\n        }\n      } else if (node instanceof Node) {\n        if (\n          shouldOverwrite(\n            new Ref(this, node.getPath(), jsonState),\n            node.state,\n            jsonValue,\n            jsonState\n          )\n        ) {\n          const newNode = this.createEdgeAt(path, jsonState);\n          newNode.value = jsonValue;\n          this.emit(\"change\", newNode.getPath(), newNode.toJSON());\n        }\n      } else {\n        const newNode = this.createEdgeAt(path, jsonState);\n        newNode.value = jsonValue;\n        this.emit(\"change\", newNode.getPath(), newNode.toJSON());\n      }\n    }\n    return this;\n  }\n\n  private setPathInternal(path: string, value: IGraphValue, state: number) {\n    if (value instanceof Ref) {\n      this.setEdgePathInternal(path, value, state);\n    } else if (value !== null && typeof value === \"object\") {\n      for (const [k, v] of Object.entries(value)) {\n        this.setPathInternal(path + SEPERATOR + k, v, state);\n      }\n    } else {\n      this.setEdgePathInternal(path, value, state);\n    }\n  }\n\n  private setEdgePathInternal(\n    path: string,\n    value: IPrimitive | Ref,\n    state: number\n  ) {\n    const edge = this.createEdgeAt(path, state);\n    edge.value = value;\n    const edgePath = edge.getPath(),\n      edgeJSON = edge.toJSON();\n    this.emit(\"change\", edgePath, edgeJSON);\n    this.emit(\"set\", edgePath, edgeJSON);\n    return edge;\n  }\n\n  private createNodeAt(path: string, state: number): Node {\n    const keys = path.split(SEPERATOR),\n      key = keys.shift() as string;\n\n    let parent = this.entries.get(key);\n\n    if (!(parent instanceof Node)) {\n      parent = new Node(this, null, key, state);\n      this.entries.set(key, parent);\n    }\n\n    return keys.reduce<Node>((parent, key) => {\n      const node = parent.children.get(key);\n\n      if (node instanceof Node) {\n        return node;\n      } else if (node instanceof Edge) {\n        if (node.value instanceof Ref) {\n          const refNode = node.value.getNode();\n\n          if (refNode instanceof Node) {\n            return refNode;\n          }\n        }\n      }\n      const newNode = new Node(this, parent, key, state);\n      parent.children.set(key, newNode);\n      return newNode;\n    }, parent);\n  }\n\n  private createEdgeAt(path: string, state: number): Edge {\n    const [parentPath, key] = getParentPathAndKey(path),\n      parent = parentPath ? this.createNodeAt(parentPath, state) : null;\n\n    let node = parent?.children.get(key);\n\n    if (node instanceof Edge) {\n      node.state = state;\n      return node;\n    } else {\n      node = new Edge(this, parent, key, state, null);\n      if (parent) {\n        parent?.children.set(key, node);\n      } else {\n        this.entries.set(key, node);\n      }\n      return node;\n    }\n  }\n}\n\nexport function getParentPathAndKey(\n  path: string\n): [parentPath: string | undefined, key: string] {\n  const index = path.lastIndexOf(\"/\");\n\n  if (index === -1) {\n    return [undefined, path];\n  } else {\n    return [path.substring(0, index), path.substring(index + 1)];\n  }\n}\n\nfunction getNodeAtPath(\n  graph: Graph,\n  path: string,\n  nodes: Map<string, Node | Edge | null>\n) {\n  const seen = nodes.get(path);\n\n  if (seen !== undefined) {\n    return seen || undefined;\n  } else {\n    const keys = path.split(SEPERATOR),\n      key = keys.shift() as string,\n      node = graph.getEntries().get(key);\n\n    if (node && keys.length) {\n      nodes.set(key, node);\n      return getNodeAtPathInternal(graph, key, node, keys, nodes);\n    } else {\n      return node;\n    }\n  }\n}\n\nfunction getNodeAtPathInternal(\n  graph: Graph,\n  path: string,\n  node: Node | Edge,\n  keys: string[],\n  nodes: Map<string, Node | Edge | null> = new Map()\n): Node | Edge | undefined {\n  if (node instanceof Node) {\n    const key = keys.shift() as string;\n\n    if (key) {\n      const child = node.children.get(key),\n        childPath = path + SEPERATOR + key;\n\n      if (child) {\n        nodes.set(childPath, child);\n        return getNodeAtPathInternal(graph, childPath, child, keys, nodes);\n      } else {\n        nodes.set(childPath, null);\n        return undefined;\n      }\n    } else {\n      nodes.set(path, node);\n      return node;\n    }\n  } else if (node.value instanceof Ref) {\n    const refPath = node.value.getPath(),\n      refNode = getNodeAtPath(graph, refPath, nodes);\n\n    if (refNode && refNode !== node) {\n      return getNodeAtPathInternal(graph, path, refNode, keys, nodes);\n    } else {\n      nodes.set(refPath, null);\n      return undefined;\n    }\n  } else {\n    nodes.set(path, node);\n    return node;\n  }\n}\n\nfunction getValueAtNode<T extends IGraphValue = IGraphValue>(\n  graph: Graph,\n  node: Node | Edge | undefined,\n  seen: Set<string> = new Set()\n): IRefValue<T> | undefined {\n  if (!node) {\n    return undefined;\n  } else if (node instanceof Node) {\n    const children: IGraph = {};\n    for (const [k, c] of node.children) {\n      const childValue =\n        c instanceof Edge\n          ? c.value\n          : (children[k] = new Ref(graph, c.getPath(), c.state));\n      children[k] = childValue;\n    }\n    return children as IRefValue<T>;\n  } else if (node.value instanceof Ref) {\n    if (seen.has(node.value.getPath())) {\n      return undefined;\n    } else {\n      seen.add(node.value.getPath());\n    }\n    return getValueAtNode<T>(graph, node.value.getNode(), seen);\n  } else {\n    return node.value as IRefValue<T>;\n  }\n}\n\nfunction shouldOverwrite(\n  localValue: IPrimitive | Ref,\n  localState: number,\n  remoteValue: IPrimitive | Ref,\n  remoteState: number\n) {\n  return (\n    remoteState >= localState &&\n    (localState === remoteState\n      ? JSON.stringify(remoteValue).length > JSON.stringify(localValue).length\n      : true)\n  );\n}\n"],"names":["has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","SEPERATOR","Entry","graph","parent","key","state","constructor","getValue","getValueAtPath","getPath","toJSON","Node","children","Map","child","id","super","Edge","value","Ref","path","waitMS","getWaitMS","get","set","getNode","getNodeAtPath","getState","callback","currentNode","onChange","node","listenAtPath","startsWith","setWaitMS","then","onfulfilled","onrejected","promise","Promise","resolve","reject","resolved","setTimeout","Error","Graph","Date","now","entries","listeningPaths","Set","getEntries","getValueAtNode","setPathInternal","merge","json","isListening","mergePathInternal","add","listeningPath","jsonState","shouldOverwrite","createNodeAt","jsonValue","newNode","createEdgeAt","setEdgePathInternal","k","v","edge","edgePath","edgeJSON","keys","split","shift","reduce","refNode","parentPath","getParentPathAndKey","index","lastIndexOf","substring","nodes","seen","getNodeAtPathInternal","childPath","refPath","c","childValue","localValue","localState","remoteValue","remoteState","JSON","stringify"],"mappings":"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"}